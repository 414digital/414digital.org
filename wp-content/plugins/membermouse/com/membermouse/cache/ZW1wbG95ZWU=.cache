/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_Employee extends MM_Entity
{
	public static $ACCESS_TYPE_MEMBERSHIP = "membership";
	
	private $displayName = "";
	private $firstName = "";
	private $lastName = "";
	private $email = "";
	private $username = "";
	private $password = "";
	private $phone = "";
	private $accessRestrictions = array();
	private $roleId = 0;
	private $userId = 0;	
	private $isDefaultFlag = "0";
	
	
	public function getData() 
	{
		global $wpdb;
		
		$sql = "SELECT acc.*, u.user_login as username, u.user_pass as password, u.ID as user_id FROM ".MM_TABLE_EMPLOYEE_ACCOUNTS." acc 
						LEFT JOIN ".$wpdb->users." u on acc.user_id = u.ID 
					WHERE acc.id='".$this->id."';";
		$result = $wpdb->get_row($sql);
		
		if($result) 
		{
			$this->setData($result);
		}
		else {
			parent::invalidate();
		}
	}
	
	public function setData($data)
	{
		try 
		{
			$this->id = $data->id;
			$this->displayName = $data->display_name;
			$this->email = $data->email;
			$this->firstName = (isset($data->first_name))?$data->first_name:"";
			$this->lastName = (isset($data->last_name))?$data->last_name:"";
			$this->phone = (isset($data->phone))?$data->phone:"";
			$this->username = (isset($data->username))?$data->username:"";
			$this->password = (isset($data->password))?$data->password:"";
			$this->accessRestrictions = (isset($data->access_restrictions))?unserialize($data->access_restrictions):array();
			$this->roleId = $data->role_id;
			$this->userId = $data->user_id;
			$this->isDefaultFlag = $data->is_default;
			parent::validate();
		}
		catch (Exception $ex) 
		{
			parent::invalidate();
		}
	}
	
	public function commitData()
	{	
		global $wpdb;
		
		$doUpdate = isset($this->id) && ($this->id != "") && (intval($this->id) > 0);
		
		// set username to the email address if empty
		if(empty($this->username))
		{
			$this->username = $this->email;
		}
		
		$accountExistsResult = $this->accountExists($doUpdate);
		$linkedUserExists = false;
		
		if(MM_Response::isError($accountExistsResult)) 
		{
			return $accountExistsResult;
		}
		
		$this->roleId = (empty($this->roleId)) ? MM_Role::$ROLE_ADMINISTRATOR : $this->roleId;
		
		if($this->userId > 0)
		{
			// make sure the linked user is valid
			$user = new MM_User($this->userId);
			if (!$user->isValid())
			{
				$this->userId = 0; //reset invalid user id to 0 to trigger the search below
			}
			else
			{
				$linkedUserExists = true;
			}
		}
		
		//search for the WP user by email if there is not one already associated
		if(!$linkedUserExists)
		{
			//search for the user
			$user = MM_User::findByEmail($this->email);
			if ($user->isValid())
			{
				$this->userId = $user->getId();
				$this->username = ($this->username == "") ? $user->getUsername() : $this->username;
				$linkedUserExists = true;
			}
		}
		
		MM_Transaction::begin();
		try
		{	
			// determine user level and role based on role ID
			$userMeta = MM_Role::getUserMeta($this->roleId);
			
			//first use WP system to create or update a linked user account			
		 	if(!$linkedUserExists)
		 	{
		 		//no existing WP user was found, create one and link it		
				$userData = array(
					  'user_pass' => $this->password,
					  'user_login' => $this->username,
					  'user_email'  => $this->email,
					  'display_name'  => $this->displayName,
					  'nickname'  => $this->displayName,
					  'first_name'  => $this->firstName,
					  'last_name'  => $this->lastName,
					  'description'  => 'Employee account created by MemberMouse',
					  'user_registered'  => MM_Utils::getCurrentTime(),
					  'role'  => $userMeta["role"],
				);
				
				$this->userId = wp_insert_user($userData);
				if($this->userId instanceof WP_Error)
				{
				 		MM_Transaction::rollback();
				 		return new MM_Response("ERROR: There was an error creating a user account for this employee", MM_Response::$ERROR);
				}
				
				add_user_meta($this->userId,"wp_user_level",$userMeta["user_level"]);
		 	}
		 	else
		 	{
		 		//reset the linked user, using wordpress api
				delete_user_meta($this->userId, "wp_capabilities");
				delete_user_meta($this->userId, "wp_user_level");
				$userData = array(
					  'ID'=>$this->userId,
					  'user_email'  => $this->email,
					  'display_name'  => $this->displayName,
					  'nickname'  => $this->displayName,
					  'first_name'  => $this->firstName,
					  'last_name'  => $this->lastName,
					  'role'  => $userMeta["role"],
				);
				
		 		$this->userId = wp_update_user($userData);
				if($this->userId instanceof WP_Error)
				{
				 		MM_Transaction::rollback();
				 		return new MM_Response("ERROR: There was an error updating the user account for this employee", MM_Response::$ERROR);
				}
				
				update_user_meta($this->userId,"wp_user_level",$userMeta["user_level"]);
		 	}
		 	
			if(!$doUpdate) 
			{
				$sql = "insert into ".MM_TABLE_EMPLOYEE_ACCOUNTS." set " .
		 			"	display_name='%s'," .
		 			"	first_name='%s'," .
		 			"	last_name='%s'," .
		 			"	role_id='%s'," .
		 			"	user_id='%d'," .
		 			"	email='%s'," .
		 			"	phone='%s'," .
		 			"   access_restrictions='%s'," .
		 			"	is_default='%d'" .
		 			"";
			}
			else 
			{	
				$sql = "update ".MM_TABLE_EMPLOYEE_ACCOUNTS." set " .
		 			"	display_name='%s'," .
		 			"	first_name='%s'," .
		 			"	last_name='%s'," .
		 			"	role_id='%s'," .
		 			"	user_id='%d'," .
		 			"	email='%s'," .
		 			"	phone='%s'," .
		 			"   access_restrictions='%s'," .
		 			"	is_default='%d'" .
			 		"	where id='{$this->id}'" .
			 		"";
		 	}
		 	
		 	$preparedSql = $wpdb->prepare($sql, $this->displayName, $this->firstName, $this->lastName, $this->roleId, $this->userId, 
		 			$this->email, $this->phone, serialize($this->accessRestrictions), $this->isDefaultFlag);
		 	
		 	$result = $wpdb->query($preparedSql);
		 	
			if($result === false)
		 	{
		 		MM_Transaction::rollback();
		 		return new MM_Response("ERROR: unable to create employee (".$preparedSql.")", MM_Response::$ERROR);
		 	}
		 
		 	if(!$doUpdate) 
		 	{
		 		$this->id = $wpdb->insert_id;
		 	}
		 	
		}
		catch(Exception $ex)
		{
		 	MM_Transaction::rollback();
		 	return new MM_Response("ERROR: unable to create employee", MM_Response::$ERROR);
		}
		
		MM_Transaction::commit();
	
 		return new MM_Response();
	}
	
	public function delete($deleteLinkedUser=false)
	{	
		global $wpdb;
		
		if(!self::isBeingUsed($this->id))
		{
			$linkedUserId = $this->userId;
			$sql = "DELETE FROM ".MM_TABLE_EMPLOYEE_ACCOUNTS." WHERE id='%d' limit 1";
			$results = $wpdb->query($wpdb->prepare($sql, $this->id));
				
			if($results) 
			{
				if ($deleteLinkedUser)
				{
					$user = new MM_User($linkedUserId);
					if ($user->isValid())
					{
						$response = $user->delete();
						if (MM_Response::isError($response))
						{
							return false;
						}
						else
						{
							return true;
						}
					}
				}
				
				return true;
			}
		}
		
		return false;
	}
 	
 	private function accountExists($doUpdate=false) 
 	{
 		global $wpdb;
 		
 		// check if email name already exists
		if(isset($this->displayName))
		{
			$sql = "SELECT * FROM ".MM_TABLE_EMPLOYEE_ACCOUNTS." WHERE display_name='".$this->displayName."' LIMIT 1";
			
			$result = $wpdb->get_row($sql);
			
			if($result)
			{
				if($doUpdate == false || ($result->id != $this->id))
				{
					MM_Transaction::rollback();
			 		return new MM_Response("An employee with the name '".$this->displayName."' already exists.", MM_Response::$ERROR);
				}
			}
		}
 		
		// check if email address already exists
		if(isset($this->email))
		{
			$sql = "SELECT * FROM ".MM_TABLE_EMPLOYEE_ACCOUNTS." WHERE email='".$this->email."' LIMIT 1";
			
			$result = $wpdb->get_row($sql);
			
			if($result)
			{
				if($doUpdate == false || ($result->id != $this->id))
				{
					MM_Transaction::rollback();
			 		return new MM_Response("An employee with the address '".$this->email."' already exists.", MM_Response::$ERROR);
				}
			}
		}
		
		return new MM_Response();
 	}
 	
 	public function buildMenu()
 	{
 		if($this->hasPermission(array("module"=>MM_MODULE_DASHBOARD)))
 		{
 			add_menu_page('MemberMouse', __('MemberMouse'), 'moderate_comments', MM_MODULE_DASHBOARD, array($this, "loadModule"), MM_Utils::getImageUrl('mm-logo-svg-white'), '3.12');
 			
 			if ($this->hasPermission(array("module"=>MM_MODULE_MEMBER_DETAILS_GENERAL)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Manage Members', 'Manage Members', 'moderate_comments', MM_MODULE_MANAGE_MEMBERS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_PRODUCTS)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Product Settings', 'Product Settings', 'moderate_comments', MM_MODULE_PRODUCT_SETTINGS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_CUSTOM_FIELDS)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Checkout Settings', 'Checkout Settings', 'moderate_comments', MM_MODULE_CHECKOUT_SETTINGS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_PAYMENT_METHODS)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Payment Settings', 'Payment Settings', 'moderate_comments', MM_MODULE_PAYMENT_SETTINGS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_EMAIL_INTEGRATION)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Email Settings', 'Email Settings', 'moderate_comments', MM_MODULE_EMAIL_SETTINGS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_AFFILIATE_INTEGRATION)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Affiliate Settings', 'Affiliate Settings', 'moderate_comments', MM_MODULE_AFFILIATE_SETTINGS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_PUSH_NOTIFICATIONS)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Developer Tools', 'Developer Tools', 'moderate_comments', MM_MODULE_DEVELOPER_TOOLS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_FREE_MEMBER_FORM)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Webforms', 'Webforms', 'moderate_comments', MM_MODULE_WEBFORMS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_ACTIVITY_LOG)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'Logs', 'Logs', 'moderate_comments', MM_MODULE_LOGS, array($this, "loadModule"));
 			}
 				
 			if ($this->hasPermission(array("module"=>MM_MODULE_EMPLOYEES)))
 			{
 				add_submenu_page(MM_MODULE_DASHBOARD, 'General Settings', 'General Settings', 'moderate_comments', MM_MODULE_GENERAL_SETTINGS, array($this, "loadModule"));
 			}
 		}
 		
 		if ($this->hasPermission(array("module"=>MM_MODULE_REPORTING)))
 		{
 			add_menu_page('MM Reporting Suite', __('Reporting Suite'), 'moderate_comments', MM_MODULE_REPORTING, array($this, "loadModule"), (version_compare(get_bloginfo('version'), "3.8", ">="))?'dashicons-chart-area':MM_Utils::getImageUrl('mm-logo-svg-white'), '3.14');
 			
 			if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$FEATURE_REPORTING_SUITE) == MM_MemberMouseService::$ACTIVE)
 			{
	 			add_submenu_page(MM_MODULE_REPORTING, 'Member Count', 'Member Count', 'moderate_comments', MM_MODULE_NEW_MEMBERS_REPORT, array($this, "loadModule"));
	 			add_submenu_page(MM_MODULE_REPORTING, 'Membership Sales', 'Membership Sales', 'moderate_comments', MM_MODULE_SALES_BY_MEMBERSHIP_REPORT, array($this, "loadModule"));
	 			add_submenu_page(MM_MODULE_REPORTING, 'Product Sales', 'Product Sales', 'moderate_comments', MM_MODULE_SALES_BY_PRODUCT_REPORT, array($this, "loadModule"));
	 			add_submenu_page(MM_MODULE_REPORTING, 'Customer Value', 'Customer Value', 'moderate_comments', MM_MODULE_CUSTOMER_VALUE_REPORT, array($this, "loadModule"));
	 			add_submenu_page(MM_MODULE_REPORTING, 'Quick Average', 'Quick Average', 'moderate_comments', MM_MODULE_SIMPLE_AVERAGE_REPORT, array($this, "loadModule"));			
	 			add_submenu_page(MM_MODULE_REPORTING, 'Compare Levels', 'Compare Levels', 'moderate_comments', MM_MODULE_NEW_MEMBERS_COMPARISON_REPORT, array($this, "loadModule"));	
	 			add_submenu_page(MM_MODULE_REPORTING, 'Payment Service', 'Payment Service', 'moderate_comments', MM_MODULE_SALES_BY_PAYMENT_SERVICE_REPORT, array($this, "loadModule"));	
	 			add_submenu_page(MM_MODULE_REPORTING, 'Channel Sales', 'Channel Sales', 'moderate_comments', MM_MODULE_TOTAL_VALUE_REPORT, array($this, "loadModule"));
 			}
 			else 
 			{
 				add_submenu_page(MM_MODULE_REPORTING, 'Advanced Reports', 'Advanced Reports', 'moderate_comments', MM_MODULE_GET_REPORTING, array($this, "loadModule"));
 			}
 		}
 		
 	}
 	
 	public function loadModule()
 	{
 		require_once(MM_MODULES.DIRECTORY_SEPARATOR."view.php");
 	}
 	
 	public function hasPermission($params=null)
 	{
 		if($this->isValid()) 
 		{
 			$crntModule = isset($params['module'])?$params['module']:"";
 			if (!empty($crntModule) && preg_match("/^MM_([a-zA-Z0-9_]+)View$/",$crntModule))
 			{
 				$crntModule = $this->translateAJAXModule($crntModule);	
 			}
 			
 			switch($this->roleId)
 			{
 				case MM_Role::$ROLE_ADMINISTRATOR:
 					return true;
 	
 				case MM_Role::$ROLE_CUSTOMER_SUPPORT:
 				case MM_Role::$ROLE_SALES:
 				case MM_Role::$ROLE_PRODUCT_MANAGER:
 					$allowedModules = array(MM_MODULE_DASHBOARD, MM_MODULE_MANAGE_MEMBERS, MM_MODULE_MEMBER_DETAILS_GENERAL, MM_MODULE_MEMBER_DETAILS_ACCESS_RIGHTS, 
 						MM_MODULE_MEMBER_DETAILS_TRANSACTION_HISTORY, MM_MODULE_MEMBER_DETAILS_CUSTOM_FIELDS, MM_MODULE_IMPORT_WIZARD, MM_MODULE_MEMBER_DETAILS_ACTIVITY_LOG,
 						MM_MODULE_ACTIVITY_LOG, MM_MODULE_MEMBER_DETAILS_GIFT_HISTORY, MM_MODULE_MEMBER_DETAILS_SUBSCRIPTIONS, MM_MODULE_GET_REPORTING, MM_MODULE_BROWSE_MEMBERS);
 					
 					if($this->roleId == MM_Role::$ROLE_PRODUCT_MANAGER)
 					{
 						$productSettingModules = array(MM_MODULE_PRODUCTS, MM_MODULE_PRODUCT_SETTINGS, MM_MODULE_MEMBERSHIP_LEVELS, MM_MODULE_BUNDLES, MM_MODULE_COUPONS, 
 								MM_MODULE_DRIP_CONTENT_SCHEDULE, MM_MODULE_LIMELIGHT_PRODUCTS, MM_MODULE_LIMELIGHT_SHIPPING_METHODS);

 						$allowedModules = array_merge($allowedModules, $productSettingModules);
 					}
 					
 					return (!empty($crntModule) && in_array($crntModule, $allowedModules));	
 					break;
 				case MM_Role::$ROLE_ANALYST:
 					$allowedModules = array(MM_MODULE_DASHBOARD,MM_MODULE_REPORTING,MM_MODULE_GET_REPORTING);
 					return (!empty($crntModule) && in_array($crntModule, $allowedModules));	
 					break;
 				default:
 					return false;
 			}
 			return false;
 		}
 		
 		// not a valid MM employee so grant access
 		return true;
 	}
 	
 	
 	public function translateAJAXModule($module)
 	{
 		$mappings = array( 			
 			'MM_AccessRightsView'             => MM_MODULE_MEMBER_DETAILS_ACCESS_RIGHTS,
 			'MM_ActivityLogView'              => MM_MODULE_MEMBER_DETAILS_ACTIVITY_LOG,
 			'MM_AffiliateIntegrationView'     => MM_MODULE_AFFILIATE_INTEGRATION,
 			'MM_ApiView'                      => MM_MODULE_API,
 			'MM_BundlesView'                  => MM_MODULE_BUNDLES,
 			'MM_CommissionProfilesView'       => MM_MODULE_COMMISSION_PROFILES,
 			'MM_CustomFieldView'              => MM_MODULE_CUSTOM_FIELDS,
 			'MM_DashboardView'                => MM_MODULE_DASHBOARD,
 			'MM_DripContentScheduleView'      => MM_MODULE_DRIP_CONTENT_SCHEDULE,
 			'MM_DuplicateSubscriptionsView'   => MM_MODULE_DUPLICATE_SUBSCRIPTION_TOOL,
 			'MM_EmailIntegrationView'		  => MM_MODULE_EMAIL_INTEGRATION,
 			'MM_EmployeesView'				  => MM_MODULE_EMPLOYEES,
 			'MM_GiftHistoryView'		   	  => MM_MODULE_MEMBER_DETAILS_GIFT_HISTORY,
 			'MM_ImportWizardView'			  => MM_MODULE_IMPORT_WIZARD,
 			'MM_LimeLightProductsView'		  => MM_MODULE_LIMELIGHT_PRODUCTS,
 			'MM_LimeLightShippingMethodsView' => MM_MODULE_LIMELIGHT_SHIPPING_METHODS,
 			'MM_ManageInstallView'			  => MM_MODULE_GENERAL_SETTINGS,
 			'MM_MemberDetailsView'            => MM_MODULE_MEMBER_DETAILS_GENERAL,
 			'MM_MembershipLevelsView'		  => MM_MODULE_MEMBERSHIP_LEVELS,
 			'MM_MembersView'                  => MM_MODULE_MANAGE_MEMBERS,
 			'MM_PaymentSettingsView'		  => MM_MODULE_PAYMENT_SETTINGS,
 			'MM_PaymentUtilsView'			  => MM_MODULE_MANAGE_MEMBERS,
 			'MM_ProductView'				  => MM_MODULE_PRODUCTS,
 			'MM_PushNotificationView'		  => MM_MODULE_PUSH_NOTIFICATIONS,
 			'MM_ReportingView'		  		  => MM_MODULE_REPORTING,
 			'MM_ShippingMethodsView'		  => MM_MODULE_SHIPPING,
 			'MM_SocialLoginView'			  => MM_MODULE_EXTENSIONS,
 			'MM_SubscriptionsView'			  => MM_MODULE_MEMBER_DETAILS_SUBSCRIPTIONS,
 			'MM_TransactionHistoryView'		  => MM_MODULE_MEMBER_DETAILS_TRANSACTION_HISTORY
 			
 			
 		);
 		return (isset($mappings[$module])?$mappings[$module]:$module);
 	}
 	
 	
 	/**
 	 * This function sets an access restriction of a particular for the employee.
 	 * 
 	 * @param String $type a constant representing the type of access restriction
 	 * @param Array $values an array of values
 	 */
 	public function setAccessRestrictions($type, $values)
 	{
 		switch($type)
 		{
 			case self::$ACCESS_TYPE_MEMBERSHIP:
 				$this->accessRestrictions[$type] = $values;
 				break;
 				
 			default:
 				// do nothing
 		}
 	}
 	
 	/**
 	 * Returns an array of values associated with the access restriction type
 	 */
 	public function getAccessRescrictions($type)
 	{
 		switch($this->roleId)
 		{
 			case MM_Role::$ROLE_ADMINISTRATOR:
 				return array();
 					
 			case MM_Role::$ROLE_CUSTOMER_SUPPORT:
 			case MM_Role::$ROLE_SALES:
 			case MM_Role::$ROLE_PRODUCT_MANAGER:
		 		switch($type)
		 		{
		 			case self::$ACCESS_TYPE_MEMBERSHIP:
		 				if(isset($this->accessRestrictions[$type]))
		 				{
		 					return $this->accessRestrictions[$type];
		 				}
		 				break;
		 		}
		 		break;
 		}
 		
 		return array();
 	}
 	
 	/**
 	 * This function checks if the employee has access of a particular type
 	 * 
 	 * @param String $type a constant representing the type of access restriction to check for
 	 * @param String $value a value to check if the employee has access to it
 	 */
 	public function hasAccess($type, $value)
 	{
 		switch($this->roleId)
 		{
 			case MM_Role::$ROLE_ADMINISTRATOR:
 				return true;
 		
 			case MM_Role::$ROLE_CUSTOMER_SUPPORT:
 			case MM_Role::$ROLE_SALES:
 			case MM_Role::$ROLE_PRODUCT_MANAGER:
 				switch($type)
 				{
 					case self::$ACCESS_TYPE_MEMBERSHIP:
 						if(isset($this->accessRestrictions[$type]) && is_array($this->accessRestrictions[$type]) && count($this->accessRestrictions[$type]) > 0)
 						{
 							return in_array($value, $this->accessRestrictions[$type]);
 						}
 						else 
 						{
 							return true;
 						}
 						break;
 				}
 				break;
 		}
 		
 		return false;
 	}
 	
 	public function getHomepage()
 	{
 		if($this->isValid())
 		{
 			switch($this->roleId)
 			{
 				case MM_Role::$ROLE_ADMINISTRATOR:
 					return MM_ModuleUtils::getUrl(MM_MODULE_DASHBOARD, MM_MODULE_DASHBOARD);
 		
 				case MM_Role::$ROLE_CUSTOMER_SUPPORT:
 				case MM_Role::$ROLE_SALES:
 					return MM_ModuleUtils::getUrl(MM_MODULE_MANAGE_MEMBERS);
 					
 				case MM_Role::$ROLE_ANALYST:
 					return MM_ModuleUtils::getUrl(MM_MODULE_REPORTING);
 					
 				case MM_Role::$ROLE_PRODUCT_MANAGER:
 					return MM_ModuleUtils::getUrl(MM_MODULE_PRODUCT_SETTINGS);
 			}
 		}
 		
 		return admin_url();
 	}
 	
 	public function canPlaceSupportOrder()
 	{
 		if($this->isValid())
 		{
 			switch($this->roleId)
 			{
 				case MM_Role::$ROLE_ADMINISTRATOR:
 				case MM_Role::$ROLE_CUSTOMER_SUPPORT:
 				case MM_Role::$ROLE_SALES:
 				case MM_Role::$ROLE_PRODUCT_MANAGER:
 					return true;
 			}
 		}
 		return false;
 	}
 	
 	public function canLoginAsMember()
 	{
 		if($this->isValid())
 		{
 			switch($this->roleId)
 			{
 				case MM_Role::$ROLE_ADMINISTRATOR:
 				case MM_Role::$ROLE_CUSTOMER_SUPPORT:
 				case MM_Role::$ROLE_SALES:
 				case MM_Role::$ROLE_PRODUCT_MANAGER:
 					return true;
 			}
 		}
 		return false;
 	}
 	
 	public function canManageMember(MM_User $user)
 	{
 		if($this->isValid() && $user->isValid())
 		{
 			$membershipAccess = $this->hasAccess(MM_Employee::$ACCESS_TYPE_MEMBERSHIP, $user->getMembershipId());
 			
 			return $membershipAccess;
 		}
 		return false;
 	}
 	
 	/** GETTERS/SETTERS */
 	
 	public function getUserId(){
 		return $this->userId;
 	}

 	public function setUserId($str)
 	{
 		$this->userId = $str;
 	}
 	
	public function setPassword($str) 
	{
		$this->password = $str;
	}
	
	public function getPassword()
	{
		return $this->password;
	}
	
	public function setUsername($str) 
	{
		$this->username = $str;
	}
	
	public function getUsername()
	{
		return $this->username;
	}
 	
	public function setRoleId($str) 
	{
		$this->roleId = $str;
	}
	
	public function getRoleId()
	{
		return $this->roleId;
	}
 	
	public function setPhone($str) 
	{
		$this->phone = $str;
	}
	
	public function getPhone()
	{
		return $this->phone;
	}
 	
	public function setDisplayName($str) 
	{
		$this->displayName = $str;
	}
	
	public function getDisplayName()
	{
		return $this->displayName;
	}
 	
	public function setFirstName($str) 
	{
		$this->firstName = $str;
	}
	
	public function getFirstName()
	{
		return $this->firstName;
	}
 	
	public function setLastName($str) 
	{
		$this->lastName = $str;
	}
	
	public function getLastName()
	{
		return $this->lastName;
	}
 	
	public function setEmail($str) 
	{
		$this->email = $str;
	}
	
	public function getEmail()
	{
		return $this->email;
	}
 	
	public function setIsDefault($str) 
	{
		$this->isDefaultFlag = $str;
	}
	
	public function isDefault()
	{
		return $this->isDefaultFlag;
	}
 	
 	
 	/** UTILITIES */
	
	public static function getDefault()
	{
		global $wpdb;
		
		$employee = new MM_Employee();
		
		$sql = "SELECT * FROM ".MM_TABLE_EMPLOYEE_ACCOUNTS." WHERE is_default='1';";
		$result = $wpdb->get_row($sql);
		
		if($result) 
		{
			$employee->setId($result->id);
			$employee->setData($result);
		}
		
		return $employee;
	}
	
	public static function findByUserId($userId)
	{
		global $wpdb;
			
		$sql = "SELECT id FROM ".MM_TABLE_EMPLOYEE_ACCOUNTS." WHERE user_id='".$userId."';";
		$result = $wpdb->get_row($sql);
			
		if($result && isset($result->id))
		{
			return new MM_Employee($result->id);
		}
			
		return new MM_Employee();
	}
	
	public static function isEmployee($userId=0)
	{
		if($userId > 0)
		{
			$employee = MM_Employee::findByUserId($userId);
		}
		else
		{
			global $current_user;
			$employee = MM_Employee::findByUserId($current_user->ID);
		}
		
		return $employee->isValid();
	}
	
	public static function isBeingUsed($accountId)
	{
		global $wpdb;
		
		// check if employee account is the default
		$sql = "select * from ".MM_TABLE_EMPLOYEE_ACCOUNTS." where id='{$accountId}'";
		$row = $wpdb->get_row($sql);
		
		if($row->is_default == "1") {
			return true;
		}
		
		// check if employee account is associated with a membership level
		$sql = "select count(*) as total from ".MM_TABLE_MEMBERSHIP_LEVELS." where email_from_id='{$accountId}'";
		$row = $wpdb->get_row($sql);
		
		if($row && $row->total > 0) {
			return true;
		}
		
		// check if employee account is associated with a push notification
		$sql = "select action_value from ".MM_TABLE_ACTIONS." where action_type='".MM_Action::$MM_ACTION_SEND_EMAIL."'";
		$results = $wpdb->get_results($sql);
		
		if($results) 
		{
			foreach($results as $row)
			{
				$actionValue = unserialize($row->action_value);
				
				if(isset($actionValue["emailToId"]))
				{
					if(intval($accountId) == intval($actionValue["emailToId"]))
					{
						return true;
					}
				}
				
				if(isset($actionValue["emailFromId"]))
				{
					if(intval($accountId) == intval($actionValue["emailFromId"]))
					{
						return true;
					}
				}
			}
		}
		
		return false;
	}
	
	
	public static function getEmployeesList()
 	{
 		global $wpdb;
 		
 		$list = array();
 		$default = "";
 		
 		$sql = "select * from ".MM_TABLE_EMPLOYEE_ACCOUNTS;
 		
 		$rows = $wpdb->get_results($sql);
 		
 		if($rows)
 		{
	 		foreach($rows as $row)
			{
				if($row->is_default == "1") 
				{
					$default = $row->id;
				}
				
				$list[$row->id] = $row->display_name . " (" . $row->email . ")";	
			}
 		}
 		
 		$emails = new stdClass();
 		$emails->default = $default;
 		$emails->list = $list;
 			
 		return $emails;
 	}
}
