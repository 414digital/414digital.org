/** 
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_AppliedBundle extends MM_Entity
{	
	public static $ACCESS_TYPE_USER = "user";
	public static $ACCESS_TYPE_MEMBERSHIP = "membership";
	
	// this is used to create an applied bundle object with sample data in it
	public static $SAMPLE_APPLIED_BUNDLE_ID = "-10";
	
	private $accessType = "";
	private $accessTypeId = "";
	private $bundleId = "";
	private $status = "";
	private $pendingStatus = "0";
	private $importedFlag = "0";
	private $daysCalcMethod = "";
	private $daysCalcValue = "";
	private $applyDate = "";
	private $subscribedListId = "";
	private $subscribedProviderId = "";
	private $expirationDate = "";
	private $cancellationDate = "";
	private $statusUpdatedDate = "";
	
	// interal use
	private $bundle = null;
	private $lastStatus = "";
	private $lastExpirationDate = "";
	private $lastCancellationDate = "";

	
	public function getData()
	{
		global $wpdb;
		$sql = "SELECT * FROM ".MM_TABLE_APPLIED_BUNDLES." WHERE bundle_id = '".$this->id."'";
		$result = $wpdb->get_row($sql);

		if($result)
		{
			$this->setData($result);
		}
		else 
		{
			parent::invalidate();
		}
	}

	public static function getAppliedBundle($userId, $bundleId)
	{
		$appliedBundle = new MM_AppliedBundle();
		
		if($bundleId != self::$SAMPLE_APPLIED_BUNDLE_ID)
		{
			global $wpdb;
			$sql = "SELECT * FROM ".MM_TABLE_APPLIED_BUNDLES." WHERE bundle_id='".$bundleId."' and access_type='".MM_AppliedBundle::$ACCESS_TYPE_USER."' and access_type_id='".$userId."' limit 1";
			$result = $wpdb->get_row($sql);
		
			if($result)
			{
				$appliedBundle->setData($result);
			}
			else
			{
				$appliedBundle->invalidate();
			}
		}
		else
		{
			// populate sample data
			$appliedBundle->accessType = self::$ACCESS_TYPE_USER;
			$appliedBundle->bundleId = self::$SAMPLE_APPLIED_BUNDLE_ID;
			$appliedBundle->accessTypeId = $userId;
			$appliedBundle->status = MM_Status::$ACTIVE;
			$appliedBundle->applyDate = MM_Utils::getCurrentTime();
			$appliedBundle->daysCalcValue = "";
			$appliedBundle->daysCalcMethod = MM_DaysCalculationTypes::$JOIN_DATE;
			$appliedBundle->statusUpdatedDate = MM_Utils::getCurrentTime();
			$appliedBundle->validate();
		}
	
		return $appliedBundle;
	}

	public function setData($data)
	{
		try 
		{	
			if($data)
			{
				$this->accessType = $data->access_type;
				$this->bundleId = $data->bundle_id;
				$this->accessTypeId = $data->access_type_id;
				$this->status = $data->status;
				$this->pendingStatus = $data->pending_status;
				$this->importedFlag = $data->imported;
				$this->applyDate = $data->apply_date;
				$this->daysCalcValue = $data->days_calc_value;
				$this->daysCalcMethod = $data->days_calc_method;
				$this->statusUpdatedDate = $data->status_updated;
				$this->expirationDate = $data->expiration_date;
				$this->cancellationDate = $data->cancellation_date;
				$this->subscribedListId = $data->subscribed_list_id;
				$this->subscribedProviderId = $data->subscribed_provider_id;
				
				if(intval($this->bundleId) > 0 && intval($this->accessTypeId) > 0)
				{
					parent::validate();
				}
			}
		}
		catch (Exception $ex) 
		{
			parent::invalidate();
		}
	}
	
	public function commitData()
	{
		global $wpdb;
		
		// validate required data
		if(empty($this->bundleId) || empty($this->accessType) || empty($this->accessTypeId))
		{
			return new MM_Response("Unable to apply bundle. Bundle ID, access type and access type ID are required.", MM_Response::$ERROR);
		}
		
		// validate bundle
		$bundle = new MM_Bundle($this->bundleId);
			
		if(!$bundle->isValid())
		{
			return new MM_Response("Unable to apply bundle. Invalid bundle ID '{$this->bundleId}'.", MM_Response::$ERROR);
		}
		
		// if making status active, ensure that bundle is active
		if($this->status == MM_Status::$ACTIVE && !$bundle->isActive())
		{
			return new MM_Response("Unable to apply bundle. Bundle '{$bundle->getName()}' is not active.", MM_Response::$ERROR);
		}
		
		// check if this commit should update an existing applied bundle
		$isUpdate = false;
		$sql = "SELECT * FROM ".MM_TABLE_APPLIED_BUNDLES." WHERE (bundle_id='{$this->bundleId}') ";
		$sql .= " AND (access_type='{$this->accessType}') AND (access_type_id='{$this->accessTypeId}') LIMIT 1;";
		$result = $wpdb->get_row($sql);
		
		if($result)
		{
			$isUpdate = true;
		}
		
		if($isUpdate)
		{
			$newCalcValue = $this->daysCalcValue;
			$newCalcMethod = $this->getDaysCalcMethod();
			
			// check if this bundle is pending cancellation
			if($this->isPendingCancellation())
			{
				// check if this bundle should be canceled
				if($this->bundleShouldCancel())
				{
					$this->setStatus($this->getPendingStatus());
			
					// clear pending cancellation
					$this->setCancellationDate(null);
					$this->setPendingStatus("0");
				}
			}
			
			if($this->statusChanged())
			{
				// changing status from canceled/paused to active
				if($this->status == MM_Status::$ACTIVE && ($this->lastStatus == MM_Status::$CANCELED || $this->lastStatus == MM_Status::$PAUSED || $this->status == MM_Status::$PENDING_CANCELLATION))
				{
					if(intval($this->daysCalcValue) > 0)
					{
						$days = $this->daysCalcValue;
					}
					else
					{
						$days = abs(floor((time() - strtotime($this->applyDate))/(24*60*60)));
					}
					
					$newDate = strtotime("-".$days." days");
					$newCalcValue = date("Y-m-d h:i:s", $newDate);
					$newCalcMethod = MM_DaysCalculationTypes::$CUSTOM_DATE;
				}
				
				// changing status to canceled/paused
				else if($this->status == MM_Status::$PAUSED || $this->status == MM_Status::$CANCELED) 
				{	
					$startDate = ($this->getDaysCalcMethod() == MM_DaysCalculationTypes::$CUSTOM_DATE) ? $this->daysCalcValue : $this->applyDate;
					$newCalcValue = abs(floor((time() - strtotime($startDate))/(24*60*60)));
					$newCalcMethod = MM_DaysCalculationTypes::$FIXED;
				}
			}
				
			$sql = "UPDATE ".MM_TABLE_APPLIED_BUNDLES." SET ";
			
			if($this->statusChanged())
			{
				$sql .= "status = '{$this->status}', status_updated='".MM_Utils::getCurrentTime()."', ";
			}
			
			if($this->doesExpire())
			{
				$sql .= "expiration_date = '".$this->getExpirationDate()."', ";
			}
			else
			{
				$sql .= "expiration_date = '0000-00-00 00:00:00', ";
			}
			
			$sql .= "cancellation_date = '".$this->getCancellationDate()."', ";
			$sql .= "pending_status = '".$this->getPendingStatus()."', ";
			
			$sql .= "days_calc_value = '{$newCalcValue}', days_calc_method = '{$newCalcMethod}', apply_date='{$this->applyDate}' ";
			$sql .= "WHERE (bundle_id = '{$this->bundleId}') AND (access_type = '{$this->accessType}') AND ";
			$sql .= "(access_type_id = '{$this->accessTypeId}');";
			
			$result = $wpdb->query($sql);
			
			if($result === false)
			{
				return new MM_Response("Unable to update applied bundle {$bundle->getName()} ({$bundle->getId()}) with access type '{$this->accessType}' ({$this->accessTypeId})", MM_Response::$ERROR);
			}
				
			if($this->accessType == MM_AppliedBundle::$ACCESS_TYPE_USER && $this->statusChanged())
			{
				do_action(MM_Event::$BUNDLE_STATUS_CHANGE, MM_Event::packageBundleData($this->accessTypeId, $this->bundleId));
				
				// clear comparison value
				$this->lastStatus = "";
			}
		}
		else
		{
			$sql = "INSERT INTO ".MM_TABLE_APPLIED_BUNDLES." SET ";
			$sql .= " access_type='{$this->accessType}', status='{$this->status}', imported='{$this->importedFlag}',";
			$sql .= " bundle_id='{$this->bundleId}', access_type_id='{$this->accessTypeId}', ";
			$sql .= " days_calc_method = '{$this->getDaysCalcMethod()}', days_calc_value = '{$this->daysCalcValue}', ";
			
			if($this->doesExpire())
			{
				$sql .= " expiration_date = '".$this->getExpirationDate()."', ";
			}
			else
			{
				$sql .= " expiration_date = '0000-00-00 00:00:00', ";
			}
			
			$sql .= " apply_date='".MM_Utils::getCurrentTime()."', status_updated='".MM_Utils::getCurrentTime()."';";
			
			$result = $wpdb->query($sql);
			
			if(!$result)
			{
				return new MM_Response("Unable to apply bundle {$bundle->getName()} ({$bundle->getId()}) with access type '{$this->accessType}' ({$this->accessTypeId})", MM_Response::$ERROR);
			}
			
			do_action(MM_Event::$BUNDLE_ADD, MM_Event::packageBundleData($this->accessTypeId, $this->bundleId));
		}
			
		return new MM_Response();
	}
	
	public function doesExpire()
	{
		$bundle = $this->getBundle();
		return $bundle->doesExpire();
	}
	
	public function hasExpired()
	{
		if($this->doesExpire())
		{
			$expirationDate = date("Y-m-d", strtotime($this->getExpirationDate()));
			$today = Date("Y-m-d h:i:s");
				
			if($today > $expirationDate)
			{
				return true;
			}
		}
		
		return false;
	}
	
	public function isPendingCancellation()
	{
		return ($this->status == MM_Status::$PENDING_CANCELLATION);
	}
	
	public function bundleShouldCancel()
	{
		if($this->isPendingCancellation())
		{
			$cancellationDate = date("Y-m-d", strtotime($this->getCancellationDate()));
			$today = Date("Y-m-d h:i:s");
			
			if($today > $cancellationDate)
			{
				return true;
			}
		}
	
		return false;
	}
	
	
	/** UTILITIES **/

	/**
	 * This method applies a bundle to the user.
	 * 
	 * @param Number $userId the ID of the user to apply the bundle to
	 * @param Number $bundleId the ID of the bundle to apply to the user
	 * @param Boolean $isImported a boolean indicating whether this bundle is being added from an import
	 * @return MM_Response a response object with the type and message set based on the result of the operation
	 */
	public static function applyBundleToUser($userId, $bundleId, $isImported=false)
	{
		$appliedBundle = MM_AppliedBundle::getAppliedBundle($userId, $bundleId);
		
		if(!$appliedBundle->isValid())
		{
			$appliedBundle = new MM_AppliedBundle();
			$appliedBundle->setAccessType(MM_AppliedBundle::$ACCESS_TYPE_USER);
			$appliedBundle->setAccessTypeId($userId);
			$appliedBundle->setBundleId($bundleId);
			$appliedBundle->setImportedFlag($isImported);
		}
		
		$appliedBundle->setStatus(MM_Status::$ACTIVE);
		return $appliedBundle->commitData();
	}
	
	/**
	 * This method removes a bundle from a user.
	 *
	 * @param Number $userId the ID of the user to remove the bundle from
	 * @param Number $bundleId the ID of the bundle to remove from the user
	 * @param Number $forceStatus a valid MM_Status ID that indicates which status to set on the applied bundle after it's been removed. If left blank, the event handling settings will be used from the MM configuration.
	 * @return MM_Response a response object with the type and message set based on the result of the operation
	 */
	public static function removeBundleFromUser($userId, $bundleId, $forceStatus="")
	{
		$appliedBundle = MM_AppliedBundle::getAppliedBundle($userId, $bundleId);
		$newStatus = "";
		$user = new MM_User($userId);
		
		if(!$user->isValid())
		{
			return new MM_Response("Unable to remove bundle because member '".$userId."' is invalid.", MM_Response::$ERROR);
		}
		
		if($appliedBundle->isValid())
		{
			if(empty($forceStatus) || (($forceStatus != MM_Status::$CANCELED) && ($forceStatus != MM_Status::$PAUSED) && ($forceStatus != MM_Status::$PENDING_CANCELLATION)))
			{
				$cancellationMethod = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DFLT_CANCELLATION_METHOD);
				
				if($cancellationMethod == MM_CancellationMethod::$CANCEL_PAUSE)
				{
					$newStatus = MM_Status::$PAUSED;
				}
				else
				{
					$newStatus = MM_Status::$CANCELED;
				}
			}
			else 
			{
				$newStatus = $forceStatus;
			}
			
			// only update status if it's different
			if($appliedBundle->getStatus() != $newStatus)
			{
				$appliedBundle->setStatus($newStatus);
				$result = $appliedBundle->commitData();
				
				if(MM_Response::isError($result))
				{
					return new MM_Response("Unable to remove bundle with ID '".$bundleId."' from member '".$userId."'.", MM_Response::$ERROR);
				}
			}
		}
		else
		{
			return new MM_Response("Unable to remove bundle because bundle with ID '".$bundleId."' is not applied to member '".$userId."'.", MM_Response::$ERROR);
		}
	
		return new MM_Response();
	}
	
	
	/** GETTERS / SETTERS **/

	public function getDaysCalcMethod()
	{
		if(!empty($this->daysCalcMethod))
		{
			return $this->daysCalcMethod;
		}
		else
		{
			return MM_DaysCalculationTypes::$JOIN_DATE;
		}
	}

	public function setDaysCalcMethod($val)
	{
		$this->daysCalcMethod = $val;
	}

	public function getDaysCalcValue()
	{
		return $this->daysCalcValue;
	}

	public function setDaysCalcValue($val)
	{
		$this->daysCalcValue = $val;
	}

	public function getStatus()
	{
		if($this->isValid())
 		{
 			if($this->doesExpire())
 			{
		 		if($this->status == MM_Status::$ACTIVE)
		 		{
		 			// check if bundle has expired	
		 			if($this->hasExpired())
		 			{
		 				$this->setStatus(MM_Status::$EXPIRED);
		 				$this->commitData();
		 			}
		 		}
		 		else if($this->status == MM_Status::$EXPIRED)
		 		{
		 			// check if bundle should be made active
		 			if(!$this->hasExpired())
		 			{
		 				$this->setStatus(MM_Status::$ACTIVE);
		 				$this->commitData();
		 			}
		 		}
 			}

 			if($this->isPendingCancellation())
 			{
 				// check if bundle should be canceled
 				if($this->bundleShouldCancel())
 				{
 					$this->setStatus($this->getPendingStatus());
 					$this->commitData();
 				}
 			}
 		}
 		
 	 	return $this->status;
	}

	public function setStatus($val)
	{
		if ($val != $this->status)
		{
			$this->lastStatus = $this->status;
		}
		
		$this->status = $val;
	}
	
	private function statusChanged()
	{
		return !empty($this->lastStatus) && ($this->lastStatus != $this->status);
	}

	public function getApplyDate($doFormat=false)
	{
		if($doFormat == false)
		{
			return $this->applyDate;
		}
		else if(!empty($this->applyDate))
		{
			return MM_Utils::dateToLocal($this->applyDate);
		}
		else
		{
			return null;
		}
	}

	public function setApplyDate($val)
	{
		$this->applyDate = $val;
	}
	
	public function getStatusUpdatedDate($doFormat=false)
	{
		if($doFormat == false)
		{
			return $this->statusUpdatedDate;
		}
		else if(!empty($this->statusUpdatedDate))
		{
			return MM_Utils::dateToLocal($this->statusUpdatedDate);
		}
		else
		{
			return null;
		}
	}
	
	public function setStatusUpdatedDate($val)
	{
		$this->statusUpdatedDate = $val;
	}

	public function setAccessType($val)
	{
		if($val == self::$ACCESS_TYPE_USER || $val == self::$ACCESS_TYPE_MEMBERSHIP)
		{
			$this->accessType = $val;
		}
	}

	public function getAccessType()
	{
		return $this->accessType;
	}

	public function setAccessTypeId($val)
	{
		$this->accessTypeId = $val;
	}

	public function getAccessTypeId()
	{
		return $this->accessTypeId;
	}

	public function setBundleId($val)
	{
		$this->bundleId = $val;
	}

	public function getBundleId()
	{
		return $this->bundleId;
	}
	
	/**
	 * @return MM_Bundle
	 */
	public function getBundle()
	{
		if(!isset($this->bundle) || !$this->bundle->isValid())
		{
			$this->bundle = new MM_Bundle($this->bundleId);
		}
			
		return $this->bundle;
	}
	
	public function setImportedFlag($bool)
	{
		$this->importedFlag = ($bool == true) ? "1" : "0";
	}
	
	public function isImported()
	{
		return ($this->importedFlag == "1") ? true : false;
	}
	
	public function isComplimentary()
	{
		if($this->getBundle()->isFree() || $this->isImported() || $this->getStatus() == MM_Status::$PENDING_ACTIVATION || $this->getStatus() == MM_Status::$ERROR 
			|| $this->getStatus() == MM_Status::$CANCELED || $this->getStatus() == MM_Status::$PAUSED || $this->isPendingCancellation())
		{
			return false;
		}
		
		$isComplimentary = false;
		$items = MM_OrderItemAccess::getOrderItemByAccess($this->getAccessTypeId(), MM_OrderItemAccess::$ACCESS_TYPE_BUNDLE, $this->getBundleId());
		
		if(count($items) > 0)
		{
			$isComplimentary = true;
			
			foreach($items as $orderItemAccess)
			{
				$orderItem = new MM_OrderItem($orderItemAccess->getOrderItemId());
				
				if($orderItem->isValid() && $orderItem->getStatus() != MM_OrderItem::$STATUS_RECURRING_CANCELLED)
				{
					$isComplimentary = false;
					break;
				}
			}
		}
		else
		{
			$isComplimentary = true;
		}
		
		return $isComplimentary;
	}
	
	public function setExpirationDate($date)
	{
		if ($this->isValid()  && ($date != $this->expirationDate))
		{
			$this->lastExpirationDate = $this->expirationDate;
		}
		$this->expirationDate = $date;
	}
		
	public function getExpirationDate($doFormat=false)
	{
		$bundle = $this->getBundle();
		if($bundle->doesExpire())
		{
			if(empty($this->expirationDate) || $this->expirationDate == "0000-00-00 00:00:00")
			{
				$this->setExpirationDate($bundle->getExpirationDate(MM_Utils::getCurrentTime()));
			}
	
			if($doFormat == false)
			{
				return $this->expirationDate;
			}
			else if(!empty($this->expirationDate))
			{
				return MM_Utils::dateToLocal($this->expirationDate);
			}
		}
			
		return null;
	}
	

	public function setCancellationDate($date)
	{
		if ($this->isValid()  && ($date != $this->cancellationDate))
		{
			$this->lastCancellationDate = $this->cancellationDate;
		}
		$this->cancellationDate = $date;
	}
		
	public function getCancellationDate($doFormat=false)
	{
		if($doFormat == false)
		{
			return $this->cancellationDate;
		}
		else if(!empty($this->cancellationDate))
		{
			return MM_Utils::dateToLocal($this->cancellationDate);
		}
	}
	
	public function setPendingStatus($status)
	{
		if($status == MM_Status::$PAUSED || $status == MM_Status::$CANCELED)
		{
			$this->pendingStatus = $status;
		}
		else
		{
			$this->pendingStatus = "0";
		}
	}
	
	public function getPendingStatus()
	{
		return $this->pendingStatus;
	}
	
	public function getSubscribedListId()
	{
		return $this->subscribedListId;
	}
	
	public function getSubscribedProviderId()
	{
		return $this->subscribedProviderId;
	}
}
