/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 *
 */
class MM_GoogleECommerceExtension extends MM_Extension
{	
	protected static $OPTION_ACTIVE = "active";
	protected static $OPTION_GOOGLE_UID = "google-uid";
	protected static $OPTION_GOOGLE_SITE_NAME = "google-site-name";
	
	public function __construct() 
	{ 
		parent::__construct();
		$this->token = MM_Extension::$GOOGLE_ECOMMERCE_TOKEN;
	}
	
	public function doInitHook() 
	{
		if($this->isActive() && $this->hasPermission())
		{
			add_action(MM_Event::$PAYMENT_RECEIVED, array($this, 'trackPayment'), 1000);
		}
	}
	
	public function isActive()
	{
		$isActive = $this->getOption(self::$OPTION_ACTIVE);
		
		return ($isActive == "on") && $this->hasPermission();
	}
	
	public function hasPermission() 
	{
		return (MM_MemberMouseService::hasPermission(MM_MemberMouseService::$EXTENSION_GOOGLE_ECOMMERCE) == MM_MemberMouseService::$ACTIVE);
	}
	
	public function displayListingItem() 
	{
		$crntPage = MM_ModuleUtils::getPage();
		$userVoiceUrl = MM_ModuleUtils::getUrl($crntPage, MM_MODULE_EXTENSIONS)."&".MM_session::$PARAM_SUBMODULE."=".MM_Extension::$GOOGLE_ECOMMERCE_TOKEN;
		?>
		<div style="background-color:#FFF; padding:20px; width:200px; border: <?php echo $this->isActive() ? '2px solid #7AD03A;' : '1px solid #ddd;'; ?>">
		<a href="<?php echo $userVoiceUrl; ?>"><img src="" style="width:200px;" /></a>
		</div>
		<?php
	}
	
	public function displayConfigScreen() 
	{ 
		$crntPage = MM_ModuleUtils::getPage();
		$userVoiceUrl = MM_ModuleUtils::getUrl($crntPage, MM_MODULE_EXTENSIONS)."&".MM_session::$PARAM_SUBMODULE."=".MM_Extension::$GOOGLE_ECOMMERCE_TOKEN;
		?>
		
		<div style="background-color:#FFF; padding:10px; width:250px;">
			<img src="" style="width:250px;" />
		</div>
		
		<div style="margin-bottom:15px;">
			<a href="http://support.membermouse.com/knowledgebase/articles/363303" target="_blank">Need help configuring the Google eCommerce extension?</a>
		</div>
		
		<?php 
		if($this->hasPermission())
		{
			$dataSaved = false;
			$errors = "";
			
			if(isset($_POST["mm-google-ecommerce-form"]))
			{
				$isActive = isset($_POST["mm-google-ecommerce-active"]) ? $_POST["mm-google-ecommerce-active"] : "";
				$gecUID = isset($_POST["mm-google-uid"]) ? $_POST["mm-google-uid"] : "";
				$gecSiteName = isset($_POST["mm-google-site-name"]) ? $_POST["mm-google-site-name"] : "";
				
				if($isActive == "on" && (empty($gecUID) || empty($gecSiteName)))
				{
					if(empty($gecUID))
					{
						$errors .= "Google Analytics UID is required.\\n";	
					}
					
					if(empty($gecSiteName))
					{
						$errors .= "Site name is required.";
					}
				}
				else 
				{
					$this->setOption(self::$OPTION_ACTIVE, $isActive);
					$this->setOption(self::$OPTION_GOOGLE_UID, $gecUID);
					$this->setOption(self::$OPTION_GOOGLE_SITE_NAME, $gecSiteName);
					
					$dataSaved = true;
				}
			}

			$active = $this->getOption(self::$OPTION_ACTIVE);
			$gecUID = $this->getOption(self::$OPTION_GOOGLE_UID);
			$gecSiteName = $this->getOption(self::$OPTION_GOOGLE_SITE_NAME);
			?>
			
			<form method="post" action="">
			<input type="hidden" name="mm-google-ecommerce-form" value="save" />
			<table style="width:520px; border-spacing: 10px; border-collapse: separate;">
			<tr>
				<td colspan="2">
					<div style="margin-bottom:10px;">
					<input type="checkbox" name="mm-google-ecommerce-active" <?php echo ($this->isActive()) ? "checked" : ""; ?> /> Enable Google eCommerce Extension
					</div>
				</td>
			</tr>
			<tr>
				<td>Google Analytics UID</td>
				<td>
					<input type="text" name="mm-google-uid" style="font-family: courier; font-size:11px; width:250px;" value="<?php echo $gecUID; ?>" />
				</td>
			</tr>
			<tr>
				<td>Site Name</td>
				<td>
					<input type="text" name="mm-google-site-name" style="font-family: courier; font-size:11px; width:250px;" value="<?php echo $gecSiteName; ?>" />
				</td>
			</tr>
			<tr>
				<td colspan="2" style="padding-top:10px;">
					<input type="submit" name="Submit" class="mm-ui-button blue" value="Save Configuration" />
				</td>
			</tr>
			</table>
			</form>
			
			
		<?php 	
			if($dataSaved)
			{
				?>
				<script>alert("Configuration saved successfully");</script>
				<?php
			}
			
			if(!empty($errors))
			{
				?>
				<script>alert("<?php echo $errors; ?>");</script>
				<?php
			}
		}
		else
		{
			?>
		 	<div id="message" class="error" style="padding:10px;">
				In order to use the Google eCommerce extension you must be on the Advanced plan or higher. You can upgrade your license by logging into your account on <a href="http://membermouse.com">membermouse.com</a> and going to the <em>My Account</em> page.
			</div>
		 	<?php 
		}
	}
	
	public function trackPayment($params)
	{
		$gecUID = $this->getOption(self::$OPTION_GOOGLE_UID);
		$gecSiteName = $this->getOption(self::$OPTION_GOOGLE_SITE_NAME);
		
		$orderNumber = $params["order_number"];
		
		if(!empty($params["order_item_id"]))
		{
			$orderNumber .= "-{$params["order_item_id"]}";
		}
		
		$orderTotal = $params["order_total"];
		$orderSubtotal = $params["order_subtotal"];
		$orderShipping = $params["order_shipping"];
		
		$orderBillingCity = $params["order_billing_city"];
		$orderBillingState = $params["order_billing_state"];
		$orderBillingCountry = $params["order_billing_country"];
		
		// access products associated with the order
		$products = json_decode(stripslashes($params["order_products"]));
		?>
		<!-- Begin Google Ecommerce -->
		<script type="text/javascript">
		
		    var _gaq = _gaq || [];
		    _gaq.push(['_setAccount', '<?php echo $gecUID; ?>']);
		    _gaq.push(['_trackPageview']);
		    _gaq.push(['_addTrans',
		        '<?php echo $orderNumber; ?>',          // transaction ID - required
		        '<?php echo $gecSiteName; ?>',  		// affiliation or store name
		        '<?php echo $orderTotal; ?>',           // total - required
		        '<?php echo ""; ?>',           			// tax
		        '<?php echo $orderShipping; ?>',        // shipping
		        '<?php echo $orderBillingCity; ?>',     // city
		        '<?php echo $orderBillingState; ?>',    // state or province
		        '<?php echo $orderBillingCountry; ?>'   // country
		    ]);
		<?php
		
		foreach ($products as $product) 
		{
		    $productId = $product->id;
		    $productName = $product->name;
		    $productSku = $product->sku;
		    $productAmount = $product->amount;
		    $productQuantity = $product->quantity;
		    $productTotal = $product->total;      // amount * quantity
		    $productIsRecurring = $product->is_recurring;   // true, false
		    $productRecurringAmount = $product->recurring_amount; // amount charged every rebill period
		    $productRebillPeriod = $product->rebill_period;  // integer - complete rebill period is a combination of rebill period 
		    // and frequency i.e. 1 months, 30 days, 2 weeks, etc.
		    $productRebillFrequency = $product->rebill_frequency;   // days, weeks, months, years
		
		    if ($productSku == "") 
		    {
		        $productSku = $productId;
		    }
		    ?>
		        // add item might be called for every item in the shopping cart
		        // where your ecommerce engine loops through each item in the cart and
		        // prints out _addItem for each
		        _gaq.push(['_addItem',
		            '<?php echo $orderNumber; ?>',           	// transaction ID - required
		            '<?php echo $productSku; ?>',           	// SKU/code - required
		            '<?php echo addslashes($productName); ?>',  // product name
		            '<?php echo ""; ?>',   						// category or variation
		            '<?php echo $productAmount; ?>',          	// unit price - required
		            '<?php echo $productQuantity; ?>'           // quantity - required
		        ]);
		<?php } ?>  
		    _gaq.push(['_trackTrans']); //submits transaction to the Analytics servers
		
		    (function() {
		        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
		    })();
		
		</script>
		<!-- End Google Ecommerce -->
	<?php }
}

