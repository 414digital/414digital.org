/**
 * 
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_APIService
{
	public static function getMember($data)
	{	
		if(!empty($data->member_id))
		{
			$user = new MM_User($data->member_id);
		
			if(!$user->isValid())
			{
				return new MM_Response("No member found for member ID '{$data->member_id}'", MM_Response::$ERROR);
			}
		}
		else
		{
			$user = MM_User::findByEmail($data->email);
			
			if(!$user->isValid())
			{
				return new MM_Response("No member found for email '{$data->email}'", MM_Response::$ERROR);
			}
		}
		
		$userData = array(
			'member_id'=>$user->getId(),
			'first_name'=>$user->getFirstName(),
			'last_name'=>$user->getLastName(),
			'is_complimentary'=>$user->isComplimentary() ? 'true' : 'false',
			'registered'=>$user->getRegistrationDate(),
			'last_logged_in'=>$user->getLastLoginDate(),
			'last_updated'=>$user->getLastUpdatedDate(),
			'days_as_member'=>$user->getDaysAsMember(),
			'status'=>$user->getStatus(),
			'status_name'=>$user->getStatusName(),
			'membership_level'=>$user->getMembershipId(),
			'membership_level_name'=>$user->getMembershipName(),
			'username'=>$user->getUsername(),
			'email' => $user->getEmail(),
			'password'=>$user->getPassword(),
			'phone' => $user->getPhone(),
			'billing_address'=>$user->getBillingAddress(),
			'billing_city'=>$user->getBillingCity(),
			'billing_state'=>$user->getBillingState(),
			'billing_zip'=>$user->getBillingZipCode(),
			'billing_country'=>$user->getBillingCountryName(),
			'shipping_address'=>$user->getShippingAddress(),
			'shipping_city'=>$user->getShippingCity(),
			'shipping_state'=>$user->getShippingState(),
			'shipping_zip'=>$user->getShippingZipCode(),
			'shipping_country'=>$user->getShippingCountryName()
		);
		
		// bundles
		$appliedBundles = $user->getAppliedBundles();
		$bundleInfo = array();
		
		foreach($appliedBundles as $appliedBundle)
		{
			$crntBundleInfo = array();
			$crntBundleInfo["id"] = $appliedBundle->getBundleId();
			$crntBundleInfo["name"] = $appliedBundle->getBundle()->getName();
			$crntBundleInfo["is_complimentary"] = $appliedBundle->isComplimentary() ? 'true' : 'false';
			$crntBundleInfo["days_with_bundle"] = $user->getDaysWithBundle($appliedBundle->getBundleId());
			$crntBundleInfo["status"] = $appliedBundle->getStatus();
			$crntBundleInfo["status_name"] = MM_Status::getName($appliedBundle->getStatus());
			$crntBundleInfo["date_added"] = $appliedBundle->getApplyDate();
			$crntBundleInfo["last_updated"] = $appliedBundle->getStatusUpdatedDate();
		
			$bundleInfo[] = $crntBundleInfo;
		}
		
		$userData["bundles"] = $bundleInfo;
		
		// custom fields
		$fields = MM_CustomField::getCustomFieldsList();
		$customFieldInfo = array();
		
		foreach($fields as $id=>$val)
		{
			$customField = new MM_CustomField($id);
			
			if($customField->isValid())
			{
				$crntCustomFieldInfo = array();
				$crntCustomFieldInfo["id"] = $customField->getId();
				$crntCustomFieldInfo["name"] = $customField->getDisplayName();
				$crntCustomFieldInfo["value"] = $user->getCustomDataByFieldId($customField->getId())->getValue();
				
				$customFieldInfo[] = $crntCustomFieldInfo;
	 		}
		}
		
		$userData["custom_fields"] = $customFieldInfo;
		
		return new MM_Response($userData);
	}

	public static function updateMember($data)
	{
		$doCommit = false;
		$result = new MM_Response();
		
		if(!empty($data->member_id))
		{
			$user = new MM_User($data->member_id);
		
			if(!$user->isValid())
			{
				return new MM_Response("No member found for member ID '{$data->member_id}'", MM_Response::$ERROR);
			}
		}
		else
		{
			$user = MM_User::findByEmail($data->email);
			
			if(!$user->isValid())
			{
				return new MM_Response("No member found for email '{$data->email}'", MM_Response::$ERROR);
			}
		}
		
		// account info
		if(isset($data->first_name))
		{
			$user->setFirstName($data->first_name);
			$doCommit = true;
		}
		
		if(isset($data->last_name))
		{
			$user->setLastName($data->last_name);
			$doCommit = true;
		}
		
		if(isset($data->phone))
		{
			$user->setPhone($data->phone);
			$doCommit = true;
		}
		
		if(isset($data->password))
		{
			$user->setPassword($data->password);
			$doCommit = true;
		}
		
		// billing info
		if(isset($data->billing_address))
		{
			$user->setBillingAddress($data->billing_address);
			$doCommit = true;
		}
		
		if(isset($data->billing_city))
		{
			$user->setBillingCity($data->billing_city);
			$doCommit = true;
		}
		
		if(isset($data->billing_state))
		{
			$user->setBillingState($data->billing_state);
			$doCommit = true;
		}
		
		if(isset($data->billing_zip))
		{
			$user->setBillingZipCode($data->billing_zip);
			$doCommit = true;
		}
		
		if(isset($data->billing_country))
		{
			$user->setBillingCountry($data->billing_country);
			$doCommit = true;
		}
		
		// shipping info
		if(isset($data->shipping_address))
		{
			$user->setShippingAddress($data->shipping_address);
			$doCommit = true;
		}
		
		if(isset($data->shipping_city))
		{
			$user->setShippingCity($data->shipping_city);
			$doCommit = true;
		}
		
		if(isset($data->shipping_state))
		{
			$user->setShippingState($data->shipping_state);
			$doCommit = true;
		}
		
		if(isset($data->shipping_zip))
		{
			$user->setShippingZipCode($data->shipping_zip);
			$doCommit = true;
		}
		
		if(isset($data->shipping_country))
		{
			$user->setShippingCountry($data->shipping_country);
			$doCommit = true;
		}
		
		if($doCommit)
		{
			$result = $user->commitData();
		}
		
		if(MM_Response::isError($result)) 
		{
			return $result;
		}
		
		// custom fields
		$fields = MM_CustomField::getCustomFieldsList();
		foreach($fields as $id=>$val)
		{
			$key = "custom_field_".$id;
			if(isset($data->$key))
			{
				$result = $user->setCustomData($id, $data->$key);
		
				if(MM_Response::isError($result))
				{
					return $result;
				}
			}
		}
		
		// change membership level
		if(isset($data->membership_level_id) && ($user->getMembershipId() != $data->membership_level_id))
		{
			$result = MM_AccessControlEngine::changeMembership($user, $data->membership_level_id);
			
			if(MM_Response::isError($result))
			{
				return $result;
			}
		}
		
		// set account status
		if(isset($data->status) && ($user->getStatus() != $data->status))
		{
			$validStatuses = array(MM_Status::$ACTIVE, MM_Status::$CANCELED, MM_Status::$PAUSED, MM_Status::$LOCKED, MM_Status::$OVERDUE);
			
			if(in_array($data->status, $validStatuses))
			{
				$result = MM_AccessControlEngine::changeMembershipStatus($user, $data->status);
				
				if(MM_Response::isError($result))
				{
					return $result;
				}
			}
			else
			{
				return new MM_Response("Error updating member. Invalid status passed '{$data->status}'. Acceptable values are 1 (Active), 2 (Canceled), 3 (Locked), 4 (Paused) and 5 (Overdue).", MM_Response::$ERROR);
			}
		}
		
		return new MM_Response();
	}

	public static function createMember($data)
	{
		$post = array();
		$executionStatus = new MM_Response();
		
		$user = MM_User::findByEmail($data->email);
		
		$membership = new MM_MembershipLevel($data->membership_level_id);
		if(!$membership->isValid())
		{
			$executionStatus = new MM_Response("Invalid membership level ID '{$data->membership_level_id}'.", MM_Response::$ERROR);
		}
		
		if(MM_Response::isError($executionStatus))
		{
			return $executionStatus;
		}
		
		$memberData = array();
		$memberData["mm_membership_level_id"] = $membership->getId();
		$memberData["mm_is_free"] = ($membership->isFree()) ? "1" : "0";
		$memberData["mm_is_shippable"] = "0";
		$memberData["mm_field_shipping_method"] = "";
		$memberData["mm_product_id"] = "0";
		
		if(!$membership->isFree())
		{
			if(isset($data->shipping_same_as_billing) && strtolower($data->shipping_same_as_billing) == "yes")
			{
				$memberData["mm_field_billing_equals_shipping"] = "1";
				$shippingSameAsBilling = true;
			}
			else
			{
				$memberData["mm_field_billing_equals_shipping"] = "0";
				$shippingSameAsBilling = false;
			}
			
			// check required fields for paid memberships
			$req = array('billing_address','billing_city','billing_state','billing_zip',
					'billing_country', 'shipping_address','shipping_city','shipping_state','shipping_zip',
					'shipping_country','credit_number','exp_month','exp_year','security_code','shipping_method'
			);
			
			foreach($req as $field)
			{
				if(!isset($data->$field))
				{
					if($shippingSameAsBilling && preg_match("/(shipping_)/", $field))
					{
						continue;
					}
					return new MM_Response("Missing required field for paid membership levels [".$field."].", MM_Response::$ERROR);
				}
			}
			
			if(isset($data->product_id) && intval($data->product_id) > 0)
			{
				$memberData["mm_product_id"] = $data->product_id;
				
				$productIds = $membership->getProductIds();
				
				if(!isset($productIds[$memberData["mm_product_id"]]))
				{
					return new MM_Response("Error creating member. Product ID '{$memberData["mm_product_id"]}' is not associated with '{$membership->getName()}' membership level.", MM_Response::$ERROR);
				}
			}
			else
			{
				$memberData["mm_product_id"] = $membership->getDefaultProduct();
			}
			
			$product = new MM_Product($memberData["mm_product_id"]);
			
			if(!$product->isValid())
			{
				return new MM_Response("Error creating member. Invalid product ID '{$memberData["mm_product_id"]}'.", MM_Response::$ERROR);
			}
			
			if($product->isShippable())
			{
				$memberData["mm_is_shippable"] = "1";
				$memberData["mm_field_shipping_method"] = $data->shipping_method;
			}
			
			$memberData["mm_field_cc_number"] = $data->credit_number;
			$memberData["mm_field_cc_exp_month"] = $data->exp_month;
			$memberData["mm_field_cc_exp_year"] = $data->exp_year;
			$memberData["mm_field_cc_cvv"] = $data->security_code;
			
			
			if(isset($data->coupon_code) && $data->coupon_code != "")
			{
				$memberData["mm_field_coupon_code"] = $data->coupon_code;
			}
			if(isset($data->affiliate_id) && $data->affiliate_id != "")
			{
				$memberData["mm_field_affiliate_id"] = $data->affiliate_id;
			}
			if(isset($data->sub_affiliate_id) && $data->sub_affiliate_id != "")
			{
				$memberData["mm_field_sub_affiliate_id"] = $data->sub_affiliate_id;
			}
		}
		
		if($user->isValid())
		{
			$memberData["mm_field_user_id"] = $user->getId();
			$memberData["mm_field_first_name"] = $user->getFirstName();
			$memberData["mm_field_last_name"] = $user->getLastName();
			$memberData["mm_field_email"] = $user->getEmail();
			$memberData["mm_field_username"] = $user->getUsername();
			$memberData["mm_field_phone"] = $user->getPhone();
			$memberData["mm_field_billing_address"] = $user->getBillingAddress();
			$memberData["mm_field_billing_city"] = $user->getBillingCity();
			$memberData["mm_field_billing_state"] = $user->getBillingState();
			$memberData["mm_field_billing_zip"] = $user->getBillingZipCode();
			$memberData["mm_field_billing_country"] = $user->getBillingCountry();
			$memberData["mm_field_shipping_address"] = $user->getShippingAddress();
			$memberData["mm_field_shipping_city"] = $user->getShippingCity();
			$memberData["mm_field_shipping_state"] = $user->getShippingState();
			$memberData["mm_field_shipping_zip"] = $user->getShippingZipCode();
			$memberData["mm_field_shipping_country"] = $user->getShippingCountry();
		}
		else 
		{
			$memberData["mm_field_user_id"] = "";
		}
		
		if(isset($data->first_name) && $data->first_name != "")
		{
			$memberData["mm_field_first_name"] = $data->first_name;
		}
		if(isset($data->last_name) && $data->last_name != "")
		{
			$memberData["mm_field_last_name"] = $data->last_name;
		}
		if(isset($data->email) && $data->email != "")
		{
			$memberData["mm_field_email"] = $data->email;
		}
		if(isset($data->username) && $data->username != "")
		{
			$memberData["mm_field_username"] = $data->username;
		}
		if(isset($data->phone) && $data->phone != "")
		{
			$memberData["mm_field_phone"] = $data->phone;
		}
		if(isset($data->password) && $data->password != "")
		{
			$memberData["mm_field_password"] = $data->password;
		}
		if(isset($data->billing_address) && $data->billing_address != "")
		{
			$memberData["mm_field_billing_address"] = $data->billing_address;
		}
		if(isset($data->billing_city) && $data->billing_city != "")
		{
			$memberData["mm_field_billing_city"] = $data->billing_city;
		}
		if(isset($data->billing_state) && $data->billing_state != "")
		{
			$memberData["mm_field_billing_state"] = $data->billing_state;
		}
		if(isset($data->billing_zip) && $data->billing_zip != "")
		{
			$memberData["mm_field_billing_zip"] = $data->billing_zip;
		}
		if(isset($data->billing_country) && $data->billing_country != "")
		{
			$memberData["mm_field_billing_country"] = $data->billing_country;
		}
		if(isset($data->shipping_address) && $data->shipping_address != "")
		{
			$memberData["mm_field_shipping_address"] = $data->shipping_address;
		}
		if(isset($data->shipping_city) && $data->shipping_city != "")
		{
			$memberData["mm_field_shipping_city"] = $data->shipping_city;
		}
		if(isset($data->shipping_state) && $data->shipping_state != "")
		{
			$memberData["mm_field_shipping_state"] = $data->shipping_state;
		}
		if(isset($data->shipping_zip) && $data->shipping_zip != "")
		{
			$memberData["mm_field_shipping_zip"] = $data->shipping_zip;
		}
		if(isset($data->shipping_country) && $data->shipping_country != "")
		{
			$memberData["mm_field_shipping_country"] = $data->shipping_country;
		}
		
		// get custom field data
		foreach($data as $key=>$value)
		{
			if(preg_match("/(custom_)/", $key))
			{
				$memberData[$key] = $value;
			}
		}
		
		$apiRequest = new MM_DefaultOrderRequest($memberData, true);
		return $apiRequest->submitRequest();
	}
	
	public static function purchaseBundle($data)
	{
		$post = array();
		$executionStatus = new MM_Response();
		
		$user = MM_User::findByEmail($data->email);
		
		$product = new MM_Product($data->product_id);
		if(!$product->isValid())
		{
			$executionStatus = new MM_Response("Invalid product ID '{$data->product_id}'.", MM_Response::$ERROR);
		}
		
		if(MM_Response::isError($executionStatus))
		{
			return $executionStatus;
		}
		
		$memberData = array();
		$memberData["mm_membership_level_id"] = "0";
		$memberData["mm_product_id"] = $product->getId();
		$memberData["mm_is_free"] = "0";
		
		if($product->isShippable())
		{
			$memberData["mm_is_shippable"] = "1";
			$memberData["mm_field_shipping_method"] = $data->shipping_method;
		}
		
		if(isset($data->shipping_same_as_billing) && strtolower($data->shipping_same_as_billing) == "yes")
		{
			$memberData["mm_field_billing_equals_shipping"] = "1";
			$shippingSameAsBilling = true;
		}
		else
		{
			$memberData["mm_field_billing_equals_shipping"] = "0";
			$shippingSameAsBilling = false;
		}
		
		// check required fields for paid memberships
		$req = array('billing_address','billing_city','billing_state','billing_zip',
				'billing_country', 'shipping_address','shipping_city','shipping_state','shipping_zip',
				'shipping_country','credit_number','exp_month','exp_year','security_code','shipping_method'
		);
		
		foreach($req as $field)
		{
			if(!isset($data->$field))
			{
				if($shippingSameAsBilling && preg_match("/(shipping_)/", $field))
				{
					continue;
				}
				return new MM_Response("Missing required field for paid membership levels [".$field."].", MM_Response::$ERROR);
			}
		}
		
		$memberData["mm_field_cc_number"] = $data->credit_number;
		$memberData["mm_field_cc_exp_month"] = $data->exp_month;
		$memberData["mm_field_cc_exp_year"] = $data->exp_year;
		$memberData["mm_field_cc_cvv"] = $data->security_code;
		
		if(isset($data->coupon_code) && $data->coupon_code != "")
		{
			$memberData["mm_field_coupon_code"] = $data->coupon_code;
		}
		if(isset($data->affiliate_id) && $data->affiliate_id != "")
		{
			$memberData["mm_field_affiliate_id"] = $data->affiliate_id;
		}
		if(isset($data->sub_affiliate_id) && $data->sub_affiliate_id != "")
		{
			$memberData["mm_field_sub_affiliate_id"] = $data->sub_affiliate_id;
		}
		
		if($user->isValid())
		{
			$memberData["mm_field_user_id"] = $user->getId();
			$memberData["mm_field_first_name"] = $user->getFirstName();
			$memberData["mm_field_last_name"] = $user->getLastName();
			$memberData["mm_field_email"] = $user->getEmail();
			$memberData["mm_field_phone"] = $user->getPhone();
			$memberData["mm_field_billing_address"] = $user->getBillingAddress();
			$memberData["mm_field_billing_city"] = $user->getBillingCity();
			$memberData["mm_field_billing_state"] = $user->getBillingState();
			$memberData["mm_field_billing_zip"] = $user->getBillingZipCode();
			$memberData["mm_field_billing_country"] = $user->getBillingCountry();
			$memberData["mm_field_shipping_address"] = $user->getShippingAddress();
			$memberData["mm_field_shipping_city"] = $user->getShippingCity();
			$memberData["mm_field_shipping_state"] = $user->getShippingState();
			$memberData["mm_field_shipping_zip"] = $user->getShippingZipCode();
			$memberData["mm_field_shipping_country"] = $user->getShippingCountry();
		}
		else 
		{
			$memberData["mm_field_user_id"] = "";
		}
		
		if(isset($data->first_name) && $data->first_name != "")
		{
			$memberData["mm_field_first_name"] = $data->first_name;
		}
		if(isset($data->last_name) && $data->last_name != "")
		{
			$memberData["mm_field_last_name"] = $data->last_name;
		}
		if(isset($data->email) && $data->email != "")
		{
			$memberData["mm_field_email"] = $data->email;
		}
		if(isset($data->phone) && $data->phone != "")
		{
			$memberData["mm_field_phone"] = $data->phone;
		}
		if(isset($data->password) && $data->password != "")
		{
			$memberData["mm_field_password"] = $data->password;
		}
		if(isset($data->billing_address) && $data->billing_address != "")
		{
			$memberData["mm_field_billing_address"] = $data->billing_address;
		}
		if(isset($data->billing_city) && $data->billing_city != "")
		{
			$memberData["mm_field_billing_city"] = $data->billing_city;
		}
		if(isset($data->billing_state) && $data->billing_state != "")
		{
			$memberData["mm_field_billing_state"] = $data->billing_state;
		}
		if(isset($data->billing_zip) && $data->billing_zip != "")
		{
			$memberData["mm_field_billing_zip"] = $data->billing_zip;
		}
		if(isset($data->billing_country) && $data->billing_country != "")
		{
			$memberData["mm_field_billing_country"] = $data->billing_country;
		}
		if(isset($data->shipping_address) && $data->shipping_address != "")
		{
			$memberData["mm_field_shipping_address"] = $data->shipping_address;
		}
		if(isset($data->shipping_city) && $data->shipping_city != "")
		{
			$memberData["mm_field_shipping_city"] = $data->shipping_city;
		}
		if(isset($data->shipping_state) && $data->shipping_state != "")
		{
			$memberData["mm_field_shipping_state"] = $data->shipping_state;
		}
		if(isset($data->shipping_zip) && $data->shipping_zip != "")
		{
			$memberData["mm_field_shipping_zip"] = $data->shipping_zip;
		}
		if(isset($data->shipping_country) && $data->shipping_country != "")
		{
			$memberData["mm_field_shipping_country"] = $data->shipping_country;
		}
		
		// get custom field data
		foreach($data as $key=>$value)
		{
			if(preg_match("/(custom_)/", $key))
			{
				$memberData[$key] = $value;
			}
		}
		
		$apiRequest = new MM_DefaultOrderRequest($memberData, true);
		return $apiRequest->submitRequest();
	}
}
