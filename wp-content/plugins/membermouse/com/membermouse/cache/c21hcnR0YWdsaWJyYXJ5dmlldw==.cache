/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_SmartTagLibraryView extends MM_View
{	
	public static $MM_JSACTION_GET_LOOKUP_GRID = "getLookupGrid";
	public static $MM_JSACTION_GET_PAGE_TEMPLATE = "getPageTemplate";
	
	private static $TEMPLATE_CHECKOUT_PAGE = "checkout-page";
	private static $TEMPLATE_REDEEM_GIFT_PAGE = "redeem-gift-page";
	private static $TEMPLATE_CONFIRMATION_PAGE = "confirmation-page";
	private static $TEMPLATE_SAVE_THE_SALE_PAGE = "save-the-sale-page";
	private static $TEMPLATE_MY_ACCOUNT_PAGE = "my-account-page";
	private static $TEMPLATE_LOGIN_PAGE = "login-page";
	private static $TEMPLATE_FORGOT_PASSWORD_PAGE = "fogot-password-page";
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{	
				case self::$MM_JSACTION_GET_LOOKUP_GRID:
					return $this->renderLookupGrid($post);
					
					
				case self::$MM_JSACTION_GET_PAGE_TEMPLATE:
					return $this->getPageTemplate($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function getSmartTags()
	{
		global $wpdb;
		
		$groups = array();
		
		$sql = "SELECT * FROM ".MM_TABLE_SMARTTAG_GROUPS." WHERE visible='1' AND parent_id='0' ORDER BY name asc";
		
		$rows = $wpdb->get_results($sql);
		
		foreach($rows as $row) 
		{
			$group = new MM_SmartTagGroup();
			$group->setData($row);
			
			if($group->isValid()) {
				array_push($groups, $group);
			}
		}
		
		return $groups;
	}
	
	public function getLookupData($objectType, MM_DataGrid $dg=null)
	{
		global $wpdb;
		
		$where = "";
		$columns = "tbl.*";
		
		switch($objectType)
		{
			case MM_TYPE_POST:
				$dg->sortBy = "post_title";
				$columns = "tbl.ID as id, tbl.post_title as name";
				$tableName = $wpdb->posts;
				$where = " tbl.post_status='publish' and tbl.post_title!='' AND (select count(*) as total from mm_core_pages where page_id=tbl.ID)<=0";
				break;
				
			case MM_TYPE_BUNDLE:
				$tableName = MM_TABLE_BUNDLES;
				break;
				
			case MM_TYPE_MEMBERSHIP_LEVEL:
				$tableName = MM_TABLE_MEMBERSHIP_LEVELS;
				break;
				
			case MM_TYPE_EMPLOYEE_ACCOUNT:
				$dg->sortBy = "display_name";
				$tableName = MM_TABLE_EMPLOYEE_ACCOUNTS;
				$columns = "tbl.id, tbl.display_name as name";
				break;
				
			case MM_TYPE_PRODUCT:
				$tableName = MM_TABLE_PRODUCTS;
				$columns = "tbl.id, tbl.name";
				break;
				
			case MM_TYPE_CUSTOM_FIELD:
				$tableName = MM_TABLE_CUSTOM_FIELDS;
				$dg->sortBy = "display_name";
				$columns = "tbl.id as id, tbl.display_name as name";
				break;
		}
		
		$sqlResultCount = "SELECT count(distinct tbl.id) as total FROM ".$tableName ." tbl ";
	
		if(!empty($where)){
			$sqlResultCount.= " where {$where} ";	
		}
		
		$countRow = $wpdb->get_row($sqlResultCount);
		
		$sql = "SELECT '{$countRow->total}' as total, {$columns} FROM ".$tableName." tbl";
	
		if(!empty($where)){
			$sql .= " where {$where} ";	
		}
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) {
			$sql .= " ORDER BY tbl.{$dg->sortBy} {$dg->sortDir} ";
		}
		
		$rows = $wpdb->get_results($sql);
		
		return $rows;
	}
	
	private function renderLookupGrid($post)
	{
		$info = new stdClass();
		
		foreach($post as $key=>$value)
		{
			$info->$key = $value;
		}
		
		if(isset($info->objectType)) 
		{
			return MM_TEMPLATE::generate(MM_MODULES."/smarttag.idlookup.datagrid.php", $info);
		}
		else 
		{
			return new MM_Response("MM_SmartTagLibraryView.renderLookupGrid(): object type missing", MM_Response::$ERROR);
		}
	}
	
	private function getPageTemplate($post)
	{
		$info = new stdClass();
		
		foreach($post as $key=>$value)
		{
			$info->$key = $value;
		}
		
		if(isset($info->mm_template_type)) 
		{
			$mm_template_base = MM_TEMPLATE_BASE;
			
			$info->resourceDirectory = MM_RESOURCES_URL;
			
			switch($info->mm_template_type)
			{
				case self::$TEMPLATE_CHECKOUT_PAGE:
					return MM_TEMPLATE::generate($mm_template_base."/default_templates/checkout.html.php", $info);
					break;
					
				case self::$TEMPLATE_REDEEM_GIFT_PAGE:
					return MM_TEMPLATE::generate($mm_template_base."/default_templates/redeemgift.html.php", $info);
					break;
					
				case self::$TEMPLATE_CONFIRMATION_PAGE:
					return MM_TEMPLATE::generate($mm_template_base."/default_templates/confirmation.html.php", $info);
					break;
					
				case self::$TEMPLATE_SAVE_THE_SALE_PAGE:
					return MM_TEMPLATE::generate($mm_template_base."/default_templates/cancel.html.php", $info);
					break;
					
				case self::$TEMPLATE_MY_ACCOUNT_PAGE:
					return MM_TEMPLATE::generate($mm_template_base."/default_templates/myaccount.html.php", $info);
					break;
					
				case self::$TEMPLATE_LOGIN_PAGE:
					return MM_TEMPLATE::generate($mm_template_base."/default_templates/login.html.php", $info);
					break;
					
				case self::$TEMPLATE_FORGOT_PASSWORD_PAGE:
					return MM_TEMPLATE::generate($mm_template_base."/default_templates/forgotpassword.html.php", $info);
					break;
			}
		}
		else 
		{
			return new MM_Response("MM_SmartTagLibraryView.getPageTemplate(): template type is missing", MM_Response::$ERROR);
		}
	}
		
	public function customMediaButtons() {
		global $post_ID, $temp_ID; 
			
		$uploading_iframe_ID = (int) (0 == $post_ID ? $temp_ID : $post_ID); 

		$output = "<style>";	
		$output .= ".wp-media-buttons { padding: 0; }";	
		$output .= ".wp-media-buttons a { vertical-align: middle; }";
		$output .= "</style>";
		
		$output .= 'Upload/Insert: ';
			 
		$media_upload_iframe_src = "media-upload.php?post_id={$uploading_iframe_ID}"; 
			
		$image_upload_iframe_src = apply_filters('image_upload_iframe_src', "{$media_upload_iframe_src}&amp;type=image"); 
		$image_title = __('Add an Image');      
		$image_button = "<a href='{$image_upload_iframe_src}&amp;TB_iframe=true' id='add_image' class='thickbox' title='{$image_title}'><img src='images/media-button-image.gif' alt='{$image_title}' /></a>"; 
		$output .= apply_filters('image_upload_button', $image_button ); 

		$video_upload_iframe_src = apply_filters('video_upload_iframe_src', "{$media_upload_iframe_src}&amp;type=video"); 
		$video_title = __('Add Video'); 
 		$video_button = "<a href='{$video_upload_iframe_src}&amp;TB_iframe=true' id='add_video' class='thickbox' title='{$video_title}'><img src='images/media-button-video.gif' alt='{$video_title}' /></a>"; 
 		$output .= apply_filters('video_upload_button', $video_button ); 
 			
 		$audio_upload_iframe_src = apply_filters('audio_upload_iframe_src', "{$media_upload_iframe_src}&amp;type=audio"); 
		$audio_title = __('Add Audio'); 
		$audio_button = "<a href='{$audio_upload_iframe_src}&amp;TB_iframe=true' id='add_audio' class='thickbox' title='{$audio_title}'><img src='images/media-button-music.gif' alt='{$audio_title}' /></a>"; 
		$output .= apply_filters('audio_upload_button', $audio_button ); 
		
		$output .= self::smartTagLibraryButtons("wordpress");
		
		$output .= "<span style='margin-left:15px;'>MM Templates: </span>";
		
		$output .= "<select id='mm-template-selector' style=''>";
		$output .= "<option value=''></option>";
		$output .= "<option value='".self::$TEMPLATE_CHECKOUT_PAGE."'>Checkout</option>";
		$output .= "<option value='".self::$TEMPLATE_REDEEM_GIFT_PAGE."'>Redeem Gift</option>";
		$output .= "<option value='".self::$TEMPLATE_CONFIRMATION_PAGE."'>Confirmation</option>";
		$output .= "<option value='".self::$TEMPLATE_SAVE_THE_SALE_PAGE."'>Save-the-Sale</option>";
		$output .= "<option value='".self::$TEMPLATE_MY_ACCOUNT_PAGE."'>My Account</option>";
		$output .= "<option value='".self::$TEMPLATE_LOGIN_PAGE."'>Login</option>";
		$output .= "<option value='".self::$TEMPLATE_FORGOT_PASSWORD_PAGE."'>Forgot Password</option>";
		$output .= "</select>";
		
		$output .= " <a onclick=\"stl_js.insertTemplate(jQuery('#mm-template-selector').val(), jQuery('#mm-template-selector :selected').text())\" title=\"Insert Template\">".MM_Utils::getIcon('plus-circle', 'green', '1.5em', '3px')."</a>";
		
		return $output;
	}
	
	public function addDialogContainers()
	{
		echo "<div id=\"mm-smarttag-library-dialog\"></div>";
		echo "<div id=\"mm-id-lookup-dialog\"></div>";
		
		echo "<script>";
		echo "jQuery(function() {";
		echo "jQuery(\"#mm-smarttag-library-dialog\").dialog({autoOpen: false});";
		echo "jQuery(\"#mm-id-lookup-dialog\").dialog({autoOpen: false});";
		echo "});";
		echo "</script>";
	}
	
	public static function smartTagLibraryButtons($contentAreaId, $showIdLookup=true)
	{
		$output = "";
		
		$output .= "<a onclick=\"stl_js.showSmartTagLibrary('".$contentAreaId."')\" title=\"SmartTag Library\" style=\"cursor:pointer;\">".MM_Utils::getIcon('book', 'blue', '1.3em', '2px', '', 'margin-left:5px;')."</a>"; 

		if($contentAreaId != "wordpress") 
		{
			$output .= " ";
		}
		
		if($showIdLookup)
		{
			$output .= "<a onclick=\"stl_js.showIdLookup('".$contentAreaId."')\" title=\"ID Lookup\" style=\"cursor:pointer;\">".MM_Utils::getIcon('search', 'orange', '1.3em', '2px', '', 'margin-left:5px;')."</a>"; 
		}
			
		return $output;
	}
}
