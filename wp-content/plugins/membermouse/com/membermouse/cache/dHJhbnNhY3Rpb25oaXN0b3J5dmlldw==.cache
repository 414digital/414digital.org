/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_TransactionHistoryView extends MM_View
{
	public static $MM_JSACTION_SHOW_REFUND_OPTIONS = "showRefundOptions";
	public static $MM_JSACTION_REFUND_TRANSACTION = "refundTransaction";
	
	
 	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SHOW_REFUND_OPTIONS:
					return $this->showRefundOptions($post);
					
				case self::$MM_JSACTION_REFUND_TRANSACTION:
					return $this->refundTransaction($post);
				
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function showRefundOptions($post){
		$info=new stdClass();
		$msg = MM_TEMPLATE::generate(MM_MODULES."/".MM_MODULE_MEMBER_DETAILS_TRANSACTION_HISTORY.".dialog.php", $info);
 		return new MM_Response($msg);
	}
	
	public function refundTransaction($post)
	{
		if (!empty($post["transaction_id"]))
		{
			$transactionId = $post["transaction_id"];
			$transactionLookupResponse = MM_TransactionLog::getTransactionInfo($transactionId);
			if (MM_Response::isError($transactionLookupResponse))
			{
				return $transactionLookupResponse;
			}
			$transactionInfo = $transactionLookupResponse->message;
			$paymentService = MM_PaymentServiceFactory::getPaymentServiceById($transactionInfo->payment_service_id);
			if (is_null($paymentService))
			{
				return new MM_Response("Unable to refund transaction: Invalid payment method");
			}
			$refundPaymentServiceResponse = $paymentService->refundTransaction($transactionId);
			//translate the paymentServiceResponse into an MM_Response. All non-success states become errors
			if (MM_PaymentServiceResponse::isSuccess($refundPaymentServiceResponse))
			{
				return new MM_Response("Refund was successful");
			}
			else
			{
				return new MM_Response($refundPaymentServiceResponse->getMessage(), MM_Response::$ERROR);
			}
		}
		else
		{
			//shouldnt ever happen through the interface
			return new MM_Response("Unable to refund transaction: No transaction id was supplied", MM_Response::$ERROR);
		}
	}
 	
 	public function getViewData($userId,MM_DataGrid $dg=null,$startDate=null)
	{
		global $wpdb;
		
		//tables used in the master query. Placing the constants into variables allows them to be embedded into the string, aiding in readability
		$transactionsTable    = MM_TABLE_TRANSACTION_LOG;
		$paymentServicesTable = MM_TABLE_PAYMENT_SERVICES;
		$ordersTable          = MM_TABLE_ORDERS;
		$orderItemsTable      = MM_TABLE_ORDER_ITEMS;
		
		$desiredTransactionTypes = implode(",",array(MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT,MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT,MM_TransactionLog::$TRANSACTION_TYPE_REFUND));
		$refundTransctionType = MM_TransactionLog::$TRANSACTION_TYPE_REFUND;
		
		$masterQuery = "SELECT o.id as orderId, o.order_number as orderNumber, t.id as mmTransId, t.transaction_date as date, ifnull(oi.description,'multiple products') as productName, oi.item_id as productId, oi.recurring_discount as recurringDiscount, ".
					   "t.amount, t.currency, t.transaction_type as transType, ps.name as pymtServiceName, ps.token as pymtServiceToken, o.affiliate_id as affiliateId, o.sub_affiliate_id as subAffiliateId, ".
					   "if(((t.refund_id IS NOT NULL) AND (t.transaction_type != {$refundTransctionType})),true,false) as isRefunded ".
					   "FROM {$transactionsTable} t LEFT JOIN {$paymentServicesTable} ps on (t.payment_service_id =  ps.id) ".
					   "LEFT JOIN {$ordersTable} o on (t.order_id = o.id) ".
					   "LEFT JOIN {$orderItemsTable} oi on (t.order_item_id = oi.id) ".
					   "WHERE (t.transaction_type IN ({$desiredTransactionTypes})) AND (o.user_id = %s) ";
		$masterQuery = $wpdb->prepare($masterQuery,$userId);
		
		$optimizedQuery = "SELECT SQL_CALC_FOUND_ROWS * FROM ({$masterQuery}) data, ".
						  "(SELECT FOUND_ROWS() as 'total') tot";
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) //handle the sorting
		{
			$optimizedQuery.= " ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		$optimizedQuery.=" ".$dg->getLimitSql(); //for pagination
		$results = $wpdb->get_results($optimizedQuery);
		
		if (count($results) > 0)
		{
			//retrieve coupon info with one query - first divide the results up by order id. Using order id as the key eliminates duplicate order ids and gives us an easy reference back to the transaction rows
			$orderIndex = array();
			foreach ($results as $rowObject)
			{
				if (!is_null($rowObject->orderId))
				{
					$orderIndex[$rowObject->orderId][] = $rowObject;
				}
			}
			
			//now retrieve all of the order items representing coupons, joined with the coupon table, for each of the orders the above transactions belong to
			$orderIdstring = implode(",",array_keys($orderIndex));
			$couponsTable = MM_TABLE_COUPONS;
			$couponType = MM_OrderItem::$ORDER_ITEM_TYPE_DISCOUNT;
			$couponSql = "SELECT oi.order_id, oi.total as discountAmount, c.coupon_name, c.recurring_billing_setting FROM {$orderItemsTable} oi LEFT JOIN {$couponsTable} c ".
						 "ON (oi.item_id = c.id) WHERE (oi.item_type = '{$couponType}') AND (oi.order_id IN ({$orderIdstring}))";
			$couponResults = $wpdb->get_results($couponSql);
			
			//finally, loop through the coupons and add their data to the transaction rows. Essentially we are deriving which transactions represent payments for items that had coupons applied
			//NOTE: This assumes that if a coupon exists in an order, there is only one product in that order. The moment multiple products are allowed in a single order that assumption becomes invalid, and this code becomes unreliable (for coupon detection).
			foreach ($couponResults as $additionalCouponData)
			{
				$currentOrderId = $additionalCouponData->order_id;
				foreach ($orderIndex[$currentOrderId] as $currentTransaction)
				{
					switch ($currentTransaction->transType)
					{
						case MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT:
							$currentTransaction->couponApplied = true;
							$currentTransaction->couponName = $additionalCouponData->coupon_name;
							$currentTransaction->couponDiscount = abs(floatval($additionalCouponData->discountAmount));
							break;
						case MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT:
							if ($additionalCouponData->recurring_billing_setting == "all")
							{
								$currentTransaction->couponApplied = true;
								$currentTransaction->couponName = $additionalCouponData->coupon_name;
								$currentTransaction->couponDiscount = "";
								
								if(!is_null($currentTransaction->recurringDiscount))
								{
									$currentTransaction->couponDiscount = $currentTransaction->recurringDiscount;
								}
								else 
								{
									$product = new MM_Product($currentTransaction->productId);
									
									if($product->isValid())
									{
										$currentTransaction->couponDiscount = $product->getPrice(false) - abs(floatval($currentTransaction->amount));
									}
								}
								break;
							}
							//break is intentionally in the if. If that condition isnt matched, we want it to go to the default
						default:
							$currentTransaction->couponApplied = false;
							$currentTransaction->couponName = "";
							$currentTransaction->couponDiscount = 0.00;
							break;
					}
				}
			}
			
			// retrieve all order items representing prorations
			$orderIdstring = implode(",",array_keys($orderIndex));
			$prorationType = MM_OrderItem::$ORDER_ITEM_TYPE_PRORATION;
			$prorationSql = "SELECT oi.order_id, oi.total as discountAmount FROM {$orderItemsTable} oi WHERE (oi.item_type = '{$prorationType}') AND (oi.order_id IN ({$orderIdstring}))";
			$prorationResults = $wpdb->get_results($prorationSql);

			//finally, loop through the prorations and add their data to the transaction rows.
			foreach ($prorationResults as $additionalProrationData)
			{
				$currentOrderId = $additionalProrationData->order_id;
				foreach ($orderIndex[$currentOrderId] as $currentTransaction)
				{
					switch ($currentTransaction->transType)
					{
						case MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT:
							$currentTransaction->prorationApplied = true;
							$currentTransaction->prorationAmount = abs(floatval($additionalProrationData->discountAmount));
							break;
						
						case MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT:
						default:
							$currentTransaction->prorationApplied = false;
							$currentTransaction->prorationAmount = 0.00;
							break;
					}
				}
			}
		}
		return $results;
	}
	
	public function generateRows($data, $renderForAdmin=true)
	{
		$rows = array();
		
		if($renderForAdmin)
		{
			$dateFormat = "M j, Y g:i a";
		}
		else
		{
			$dateFormat = "M j, Y";
		}
		
		$crntPaymentService = null;
		foreach($data as $item)
		{
			// Transaction Type
			$pymtMethodInfoStr = "";
			
			if($renderForAdmin)
			{
				$pymtMethodInfoStr = !empty($item->pymtServiceName)?"\nPayment Method: ".$item->pymtServiceName."\n":"";
			}
			
			if (($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT) || ($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT))
			{
				$transType = MM_Utils::getIcon('money', 'green', '1.4em', '2px', "Successful Payment {$pymtMethodInfoStr}");
			}
			else if ($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_REFUND)
			{
				$transType = MM_Utils::getIcon('money', 'red', '1.4em', '2px', "Successful Refund {$pymtMethodInfoStr}");
			}
			else
			{
				$transType = MM_NO_DATA;
			}
				
			if($renderForAdmin)
			{
				// Affiliate Info
				$affiliateInfo = "";
				if (!empty($item->affiliateId) || !empty($item->subAffiliateId))
				{
					$affiliateInfoStr = "";
			
					if (!empty($item->affiliateId))
					{
						$affiliateInfoStr .= "Affiliate ID: ".$item->affiliateId."\n";
					}
			
					if (!empty($item->subAffiliateId))
					{
						$affiliateInfoStr .= "Sub-affiliate ID: ".$item->subAffiliateId."\n";
					}
			
					$affiliateInfo = MM_Utils::getAffiliateIcon($affiliateInfoStr);
				}
				
				$actions = "";
				// Refund Button
				if(($item->isRefunded != '1') && (($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT) || ($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT)))
				{
					$actions = '<a title="Issue Refund" onclick="mmjs.issueRefund('.$item->mmTransId.',\''.number_format(abs($item->amount),2,'.','').'\')" class="mm-ui-button">Issue Refund</a>';
				}
				else if($item->isRefunded == '1')
				{
					$refundPymtInfoStr = "";
						
					if(!empty($item->refundPymtServiceName))
					{
						$refundPymtInfoStr .= "Payment Method: ".$item->refundPymtServiceName."\n";
			
						if(!empty($item->refundRefId))
						{
							$refundPymtInfoStr .= $item->refundPymtServiceName." Reference ID: ".$item->refundRefId;
						}
					}
			
					$actions = MM_Utils::getCheckIcon()." <em>Refund Issued</em>";
				}
				
				// add payment service-specific actions
				if(is_null($crntPaymentService) || $crntPaymentService->getToken() != $item->pymtServiceToken)
				{
					$crntPaymentService = MM_PaymentServiceFactory::getPaymentService($item->pymtServiceToken);	
				}
				
				if($crntPaymentService->supportsFeature(MM_PaymentServiceFeatures::TRANSACTION_PAGE_ACTIONS))
				{
					$actions .= " ".$crntPaymentService->getTransactionPageActions($item->mmTransId);
				}
			}
				
			// Amount
			if(floatval($item->amount) == 0)
			{
				$desc = "When requesting a refund, the related transaction can be in a settled or unsettled state. For settled transactions, the funds ";
				$desc .= "have actually been debited from the customer's account so it's possible for them to be refunded. For unsettled transactions, ";
				$desc .= "the debit is still pending so in this case there's nothing to refund and the transaction is simply voided which cancels the ";
				$desc .= "request to transfer the funds.";
				$amount = "<span style='font-family:courier; font-variant: small-caps;'>VOIDED</span>".MM_Utils::getInfoIcon($desc);
			}
			else
			{
				$amount = "<span style='font-family:courier;'>"._mmf(abs($item->amount),$item->currency)."</span>";
			}
				
			if ((isset($item->couponApplied) && $item->couponApplied) || (isset($item->prorationApplied) && $item->prorationApplied))
			{
				$discountDescription = "DISCOUNTS APPLIED\n";
				
				if(isset($item->couponApplied) && $item->couponApplied)
				{
					if(!empty($item->couponDiscount))
					{
						$discountDescription .= "Coupon: "._mmf($item->couponDiscount, $item->currency)." ({$item->couponName})\n";
					}
				}
				
				if(isset($item->prorationApplied) && $item->prorationApplied)
				{
					if(!empty($item->prorationAmount))
					{
						$discountDescription .= "Proration: "._mmf($item->prorationAmount, $item->currency)."\n";
					}
				}
				
				if((isset($item->couponApplied) && $item->couponApplied) && (isset($item->prorationApplied) && $item->prorationApplied)
					&& !empty($item->couponDiscount) && !empty($item->prorationAmount))
				{
					$totalDiscount = $item->couponDiscount + $item->prorationAmount;
					
					$discountDescription .= "---------------------\n";
					$discountDescription .= "Total Discount: "._mmf($totalDiscount, $item->currency);
				}
				
				$amount .= " ".MM_Utils::getDiscountIcon($discountDescription);
			}
			
			$crntRow = array
			(
				array( 'content' => "<span style='font-family:courier;'>{$item->orderNumber}</span>"),
				array( 'content' => MM_Utils::dateToLocal($item->date, $dateFormat)),
				array( 'content' => $item->productName),
				array( 'content' => $amount),
				array( 'content' => $transType)
			);
			
			if($renderForAdmin)
			{
				$crntRow[] = array( 'content' => $affiliateInfo);
				$crntRow[] = array( 'content' => $actions, "attr" => "nowrap");
			}
			
			$rows[] = $crntRow;
		}
		
		return $rows;
	}
}
