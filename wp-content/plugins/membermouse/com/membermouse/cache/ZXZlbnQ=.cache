/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_Event
{	
	public static $MEMBER_ADD = "mm_member_add";
	public static $MEMBER_STATUS_CHANGE = "mm_member_status_change";
	public static $MEMBER_MEMBERSHIP_CHANGE = "mm_member_membership_change";
	public static $MEMBER_ACCOUNT_UPDATE = "mm_member_account_update";
	public static $MEMBER_DELETE = "mm_member_delete";
	public static $BUNDLE_ADD = "mm_bundles_add";
	public static $BUNDLE_STATUS_CHANGE = "mm_bundles_status_change";
	public static $PAYMENT_RECEIVED = "mm_payment_received";
	public static $PAYMENT_REBILL = "mm_payment_rebill";
	public static $PAYMENT_REBILL_DECLINED = "mm_payment_rebill_declined";
	public static $REFUND_ISSUED = "mm_refund_issued";
	public static $BILLING_SUBSCRIPTION_UPDATED = "mm_billing_subscription_updated";
	public static $BILLING_SUBSCRIPTION_REBILL_DATE_CHANGED = "mm_billing_subscription_rebill_date_changed";
	public static $BILLING_SUBSCRIPTION_CANCELED = "mm_billing_subscription_canceled";
	public static $COMMISSION_INITIAL = "mm_commission_initial";
	public static $COMMISSION_REBILL = "mm_commission_rebill";
	public static $CANCEL_COMMISSION = "mm_commission_cancel";
	
	public static function packageMemberData($memberId, $acctInfoChanges=null)
	{
		$userData = array();
		
		$user = new MM_User($memberId);
		
		if($user->isValid())
		{
			$userData = array(
				'member_id'=>$user->getId(),
				'registered'=>$user->getRegistrationDate(),
				'last_logged_in'=>$user->getLastLoginDate(),
				'last_updated'=>$user->getLastUpdatedDate(),
				'days_as_member'=>$user->getDaysAsMember(),
				'status'=>$user->getStatus(),
				'status_name'=>MM_Status::getName($user->getStatus()),
				'membership_level'=>$user->getMembershipId(),
				'membership_level_name'=>$user->getMembershipName(),
				'is_complimentary'=>$user->isComplimentary() ? 'true' : 'false',
				'first_name'=>$user->getFirstName(),
				'last_name'=>$user->getLastName(),
				'username'=>$user->getUsername(),
				'email' => $user->getEmail(),
				'phone' => $user->getPhone(),
				'billing_address'=>$user->getBillingAddress(),
				'billing_city'=>$user->getBillingCity(),
				'billing_state'=>$user->getBillingState(),
				'billing_zip_code'=>$user->getBillingZipCode(),
				'billing_country'=>$user->getBillingCountryName(),
				'shipping_address'=>$user->getShippingAddress(),
				'shipping_city'=>$user->getShippingCity(),
				'shipping_state'=>$user->getShippingState(),
				'shipping_zip_code'=>$user->getShippingZipCode(),
				'shipping_country'=>$user->getShippingCountryName()
			);
			
			// last values for account info changes
			if(!is_null($acctInfoChanges) && count($acctInfoChanges) > 0)
			{
				foreach($acctInfoChanges as $key=>$value)
				{
					$userData["last_{$key}"] = $value;
				}
			}
			
			// custom fields
			$fields = MM_CustomField::getCustomFieldsList();
			foreach($fields as $id=>$val)
			{
				$customField = new MM_CustomField($id);
					
				if($customField->isValid())
				{
					$userData["cf_".$customField->getId()] = htmlentities($user->getCustomDataByFieldId($customField->getId())->getValue(),ENT_QUOTES, 'UTF-8', true);
				}
			}
		}
		
		return $userData;
	}
	
	public static function packageBundleData($memberId, $bundleId)
	{
		$userData = array();
	
		$user = new MM_User($memberId);
	
		if($user->isValid())
		{
			$userData = self::packageMemberData($memberId);
			$appliedBundle = MM_AppliedBundle::getAppliedBundle($memberId, $bundleId);
			
			if($appliedBundle->isValid())
			{
				$userData["bundle_id"] = $appliedBundle->getBundleId();
				
				if($bundleId == MM_AppliedBundle::$SAMPLE_APPLIED_BUNDLE_ID)
				{
					$userData["bundle_name"] = "Sample Bundle";
					$userData["days_with_bundle"] = "5";
				}
				else
				{
					$userData["bundle_name"] = $appliedBundle->getBundle()->getName();
					$userData["days_with_bundle"] = $user->getDaysWithBundle($appliedBundle->getBundleId());
				}
				
				$userData["bundle_is_complimentary"] = $appliedBundle->isComplimentary() ? 'true' : 'false';
				$userData["bundle_status"] = $appliedBundle->getStatus();
				$userData["bundle_status_name"] = MM_Status::getName($appliedBundle->getStatus());
				$userData["bundle_date_added"] = $appliedBundle->getApplyDate();
				$userData["bundle_last_updated"] = $appliedBundle->getStatusUpdatedDate();
			}
		}
	
		return $userData;
	}
	
	public static function packageOrderData($memberId, $orderId, $orderItemId=null, $transactionId=null, $isRebill=false)
	{
		$userData = array();
	
		$user = new MM_User($memberId);
		
		if($user->isValid())
		{
			$userData = self::packageMemberData($memberId);
			$order = new MM_Order($orderId);
			
			if($order->isValid())
			{
				$userData["order_id"] = $orderId;
				$userData["order_number"] = $order->getOrderNumber();
				
				$userData["order_item_id"] = "";
				if(!empty($orderItemId))
				{
					$userData["order_item_id"] = $orderItemId;
				}
				
				$userData["order_transaction_id"] = "";
				if(!empty($transactionId))
				{
					$userData["order_transaction_id"] = $transactionId;
				}

				$userData["order_ip_address"] = $order->getIPAddress();
				$userData["order_shipping_method"] = $order->getShippingOptionDescription();
				$userData["order_billing_address"] = $order->getBillingAddress()->getAddressLine1();
				$userData["order_billing_city"] = $order->getBillingAddress()->getCity();
				$userData["order_billing_state"] = $order->getBillingAddress()->getState();
				$userData["order_billing_zipcode"] = $order->getBillingAddress()->getPostalCode();
				$userData["order_billing_country"] = $order->getBillingAddress()->getCountry();
				$userData["order_shipping_address"] = $order->getShippingAddress()->getAddressLine1();
				$userData["order_shipping_city"] = $order->getShippingAddress()->getCity();
				$userData["order_shipping_state"] = $order->getShippingAddress()->getState();
				$userData["order_shipping_zipcode"] = $order->getShippingAddress()->getPostalCode();
				$userData["order_shipping_country"] = $order->getShippingAddress()->getCountry();
				$userData["order_affiliate_id"] = $order->getAffiliateId();
				$userData["order_subaffiliate_id"] = $order->getSubAffiliateId();
				
				$orderItems = $order->getProducts();
				$productInfo = array();
				
				foreach($orderItems as $orderItem)
				{
					$product = new MM_Product($orderItem->getItemId());
					
					if($product->isValid())
					{
						$crntProductInfo = array();
						$crntProductInfo["id"] = $product->getId();
						$crntProductInfo["name"] = $product->getName();
						$crntProductInfo["sku"] = $product->getSku();
						$crntProductInfo["amount"] = $orderItem->getAmount();
						$crntProductInfo["quantity"] = $orderItem->getQuantity();
						$crntProductInfo["total"] = $orderItem->getTotal();
						$crntProductInfo["is_recurring"] = $orderItem->isRecurring();
						$crntProductInfo["recurring_amount"] = $orderItem->getRecurringAmount();
						$crntProductInfo["rebill_period"] = $orderItem->getRebillPeriod();
						$crntProductInfo["rebill_frequency"] = $orderItem->getRebillFrequency();
						
						$productInfo[] = $crntProductInfo;
					}
				}
				
				$userData["order_products"] = json_encode($productInfo);
				
				// determine order total and discount amount based on if this is a rebill payment or not
				if(!$isRebill)
				{
					$userData["order_total"] = $order->getTotal();
					$userData["order_subtotal"] = $order->getSubtotal();
					$userData["order_shipping"] = $order->getShipping();
					$userData["order_discount"] = abs(floatval($order->getDiscount()));
				}
				else
				{
					$data = MM_OrderUtils::getRebillAmounts($order);
					$userData["order_total"] = $data["rebill_total"];
					$userData["order_subtotal"] = $data["rebill_subtotal"];
					$userData["order_shipping"] = $data["rebill_shipping"];
					$userData["order_discount"] = $data["rebill_discount"];
				}
				
				$orderItems = $order->getCoupons();
				$couponInfo = array();
				
				foreach($orderItems as $orderItem)
				{
					$coupon = new MM_Coupon($orderItem->getItemId());
						
					if($coupon->isValid())
					{
						if((!$isRebill) || ($isRebill && $coupon->getRecurringBillingSetting() == MM_Coupon::$TYPE_RECURRING_BILLING_SETTING_ALL))
						{
							$crntCouponInfo = array();
							$crntCouponInfo["id"] = $coupon->getId();
							$crntCouponInfo["name"] = $coupon->getCouponName();
							$crntCouponInfo["code"] = $coupon->getCouponCode();
					
							$couponInfo[] = $crntCouponInfo;
						}
					}
				}
				
				$userData["order_coupons"] = json_encode($couponInfo);
				
				$orderItems = $order->getProrations();
				$prorationInfo = array();
				
				foreach($orderItems as $orderItem)
				{
					$crntProrationInfo = array();
					$crntProrationInfo["amount"] = $orderItem->getTotal();
					$crntProrationInfo["description"] = $orderItem->getDescription();
					
					$prorationInfo[] = $crntProrationInfo;
				}
				
				$userData["order_prorations"] = json_encode($prorationInfo);
			}
		}
		
		return $userData;
	}
	
	public static function packageAffiliateData(MM_CommissionProfile $commissionProfile, $affiliateId, $orderNumber, $orderTotal, $orderData, $isRebill=false)
	{
		$affiliateData = array();
		
		$affiliateData["member_id"] = $orderData["member_id"];
		$affiliateData["order_id"] = $orderData["order_id"];
		$affiliateData["order_affiliate_id"] = $affiliateId;
		$affiliateData["order_subaffiliate_id"] = $orderData["order_subaffiliate_id"];
		$affiliateData["order_number"] = $orderNumber;
		$affiliateData["order_total"] = $orderTotal;
		$affiliateData["order_ip_address"] = $orderData["order_ip_address"];
		$affiliateData["order_products"] = $orderData["order_products"];
		$affiliateData["order_coupons"] = $orderData["order_coupons"];
		$affiliateData["order_prorations"] = $orderData["order_prorations"];
		
		$affiliateData["rebill_commission_flat_rate"] = "";
		$affiliateData["rebill_commission_percent"] = "";
		
		if($isRebill && $commissionProfile->getRebillCommissionType() != MM_CommissionProfile::$COMMISSION_TYPE_DEFAULT)
		{
			switch($commissionProfile->getRebillCommissionType())
			{
				case MM_CommissionProfile::$COMMISSION_TYPE_PERCENT:
					$affiliateData["rebill_commission_percent"] = intval($commissionProfile->getRebillCommissionValue()) / 100;
					break;
						
				case MM_CommissionProfile::$COMMISSION_TYPE_FLATRATE:
					$affiliateData["rebill_commission_flat_rate"] = $commissionProfile->getRebillCommissionValue();
					break;
			}
		}
		
		return $affiliateData;
	}
	
	public static function getName($eventType, $doLowercase=false)
	{
		$eventName = "";
	
		switch($eventType)
		{
			case self::$MEMBER_ADD:
				$eventName = "Member Added";
				break;
	
			case self::$MEMBER_ACCOUNT_UPDATE:
				$eventName = "Member Account Updated";
				break;
					
			case self::$MEMBER_STATUS_CHANGE:
				$eventName = "Membership Status Changed";
				break;
	
			case self::$MEMBER_MEMBERSHIP_CHANGE:
				$eventName = "Membership Level Changed";
				break;
	
			case self::$MEMBER_DELETE:
				$eventName = "Member Deleted";
				break;
	
			case self::$BUNDLE_ADD:
				$eventName = "Bundle Added";
				break;
	
			case self::$BUNDLE_STATUS_CHANGE:
				$eventName = "Bundle Status Changed";
				break;
	
			case self::$PAYMENT_RECEIVED:
				$eventName = "Payment Received";
				break;
	
			case self::$PAYMENT_REBILL:
				$eventName = "Rebill Payment Received";
				break;
	
			case self::$PAYMENT_REBILL_DECLINED:
				$eventName = "Rebill Payment Failed";
				break;
	
			case self::$REFUND_ISSUED:
				$eventName = "Refund Issued";
				break;
	
			case self::$COMMISSION_INITIAL:
				$eventName = "Affiliate Commission (Initial)";
				break;
	
			case self::$COMMISSION_REBILL:
				$eventName = "Affiliate Commission (Rebill)";
				break;
	
			case self::$CANCEL_COMMISSION:
				$eventName = "Cancel Affiliate Commission";
				break;
		}
	
		return ($doLowercase) ? strtolower($eventName) : $eventName;
	}
	
	public static function getEventTypesList($selectedEvent="")
	{
		$list = array();
		// member events
		$list[MM_Event::$MEMBER_ADD] = MM_Event::getName(MM_Event::$MEMBER_ADD);
		$list[MM_Event::$MEMBER_ACCOUNT_UPDATE] = MM_Event::getName(MM_Event::$MEMBER_ACCOUNT_UPDATE);
		$list[MM_Event::$MEMBER_STATUS_CHANGE] = MM_Event::getName(MM_Event::$MEMBER_STATUS_CHANGE);
		$list[MM_Event::$MEMBER_MEMBERSHIP_CHANGE] = MM_Event::getName(MM_Event::$MEMBER_MEMBERSHIP_CHANGE);
		$list[MM_Event::$MEMBER_DELETE] = MM_Event::getName(MM_Event::$MEMBER_DELETE);
		
		// bundle events
		$list[MM_Event::$BUNDLE_ADD] = MM_Event::getName(MM_Event::$BUNDLE_ADD);
		$list[MM_Event::$BUNDLE_STATUS_CHANGE] = MM_Event::getName(MM_Event::$BUNDLE_STATUS_CHANGE);
		
		// order events
		$list[MM_Event::$PAYMENT_RECEIVED] = MM_Event::getName(MM_Event::$PAYMENT_RECEIVED);
		$list[MM_Event::$PAYMENT_REBILL] = MM_Event::getName(MM_Event::$PAYMENT_REBILL);
		$list[MM_Event::$PAYMENT_REBILL_DECLINED] = MM_Event::getName(MM_Event::$PAYMENT_REBILL_DECLINED);
		$list[MM_Event::$REFUND_ISSUED] = MM_Event::getName(MM_Event::$REFUND_ISSUED);
		
		// affiliate events
		$list[MM_Event::$COMMISSION_INITIAL] = MM_Event::getName(MM_Event::$COMMISSION_INITIAL);
		$list[MM_Event::$COMMISSION_REBILL] = MM_Event::getName(MM_Event::$COMMISSION_REBILL);
		$list[MM_Event::$CANCEL_COMMISSION] = MM_Event::getName(MM_Event::$CANCEL_COMMISSION);
		
		return $list;
	}
}
