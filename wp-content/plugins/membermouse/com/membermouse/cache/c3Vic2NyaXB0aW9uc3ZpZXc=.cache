/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_SubscriptionsView extends MM_View
{
	public static $MM_JSACTION_SAVE_SUBSCRIPTION = "saveSubscription";
	public static $MM_JSACTION_CANCEL_SUB_ONLY = "cancelSubscriptionOnly";
	public static $MM_JSACTION_CANCEL_SUB_AND_ACCESS = "cancelSubscriptionAndAccess";
	

 	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_CANCEL_SUB_AND_ACCESS:
					return $this->cancelSubscriptionAndAccess($post);
					
				case self::$MM_JSACTION_CANCEL_SUB_ONLY:
					return $this->cancelSubscriptionOnly($post);
					
				case self::$MM_JSACTION_SAVE_SUBSCRIPTION:
					return $this->saveSubscription($post);
				
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function showEditSubscriptionDialog($post)
	{
		if(isset($post["order_item_id"]))
		{
			$info = new stdClass();
			$info->orderItemId = $post["order_item_id"];
			
			$data = MM_TEMPLATE::generate(MM_MODULES."/".MM_MODULE_MEMBER_DETAILS_SUBSCRIPTIONS.".dialog.php", $info);
			
			return new MM_Response($data);
		}
		else
		{
			return new MM_Response("Error editing subscription. Order item ID is required.", MM_Response::$ERROR);
		}
	}
	
	public function saveSubscription($post)
	{
		if(isset($post["order_item_id"]))
		{
			$orderItem = new MM_OrderItem($post["order_item_id"]);
			
			if($orderItem->isValid())
			{
				global $wpdb;
					
				$sql = $wpdb->prepare("SELECT payment_id FROM ".MM_TABLE_ORDERS." WHERE id = %s LIMIT 1",$orderItem->getOrderId());
				$pymtServiceId = $wpdb->get_var($sql);
					
				if ($pymtServiceId !== false)
				{
					$pymtService = MM_PaymentServiceFactory::getPaymentServiceById($pymtServiceId);
						
					if($pymtService->supportsFeature(MM_PaymentServiceFeatures::CARD_ON_FILE))
					{
						// update next rebill date
						if(isset($post["mm_next_rebill_date"]))
						{	
							// check if next rebill date is in the future
							if(strtotime($post["mm_next_rebill_date"]) < time())
							{
								return new MM_Response("Unable to update subscription. Next rebill date must be set to a date in the future.", MM_Response::$ERROR);
							}
							
							$result = $pymtService->modifyNextBillingDate($orderItem, $post["mm_next_rebill_date"]);
							
							if(!MM_PaymentServiceResponse::isSuccess($result))
							{
								return new MM_Response($result->getMessage(), MM_Response::$ERROR);
							}
							
							$order = new MM_Order($orderItem->getOrderId());
							
							if($order->isValid())
							{
								do_action(MM_Event::$BILLING_SUBSCRIPTION_REBILL_DATE_CHANGED, MM_Event::packageOrderData($order->getCustomer()->getId(), $order->getId(), $orderItem->getId()));
							}
						}
						
						return new MM_Response("Subscription updated successfully");
					}
				}
			}
		}
		
		return new MM_Response("Unable to update subscription. Invalid order item passed.", MM_Response::$ERROR);
	}
	
	private function cancelSubscriptionAndAccess($post)
	{
		if(isset($post["mm_order_item_id"]))
		{
			$orderItem = new MM_OrderItem($post["mm_order_item_id"]);
				
			if($orderItem->isValid())
			{
				$view = new MM_MemberDetailsView();
				return $view->cancelSubscriptionForOrderItem($orderItem);
			}
			else
			{
				return new MM_Response("Error cancelling subscription. Order Item {$post["mm_order_item_id"]} is invalid.", MM_Response::$ERROR);
			}
		}
		else
		{
			return new MM_Response("Error cancelling subscription. Order Item ID is required.", MM_Response::$ERROR);
		}
	}
	
	private function cancelSubscriptionOnly($post)
	{
		if(isset($post["mm_order_item_id"]))
		{
			$orderItem = new MM_OrderItem($post["mm_order_item_id"]);
				
			if($orderItem->isValid())
			{
				$result = MM_PaymentUtils::cancelSubscriptionForOrderItem($orderItem);
				
				if(MM_Response::isError($result))
				{
					return $result;
				}
				
				return new MM_Response("Subscription canceled successfully.");
			}
			else
			{
				return new MM_Response("Error cancelling subscription. Order Item {$post["mm_order_item_id"]} is invalid.", MM_Response::$ERROR);
			}
		}
		else
		{
			return new MM_Response("Error cancelling subscription. Order Item ID is required.", MM_Response::$ERROR);
		}
	}
 	
 	public function getViewData($userId,MM_DataGrid $dg=null,$startDate=null)
	{
		global $wpdb;
		
		//tables used in the master query.
		$ordersTable          	= MM_TABLE_ORDERS;
		$orderItemsTable      	= MM_TABLE_ORDER_ITEMS;
		$orderItemAccessTable 	= MM_TABLE_ORDER_ITEM_ACCESS;
		$membershipLevelsTable 	= MM_TABLE_MEMBERSHIP_LEVELS;
		$bundlesTable 		   	= MM_TABLE_BUNDLES;	
		
		$accessTypeMembership = MM_OrderItemAccess::$ACCESS_TYPE_MEMBERSHIP;
		$accessTypeBundle = MM_OrderItemAccess::$ACCESS_TYPE_BUNDLE;
		
		$statusRecurring = MM_OrderItem::$STATUS_RECURRING;
		$statusRebillFailed = MM_OrderItem::$STATUS_RECURRING_REBILL_FAILED;
		$statusRecurringPendingOverdue = MM_OrderItem::$STATUS_RECURRING_PENDING_OVERDUE;
		
		// membership level subscriptions
		$masterQuery = "SELECT o.date_added, m.name as access_type_name, m.id as access_type_id, oi.item_id as product_id, oi.status as order_item_status, oi.id as order_item_id FROM {$orderItemAccessTable} oia ".
				"INNER JOIN {$membershipLevelsTable} m ON ((oia.user_id='%s') AND (oia.access_type_id = m.id) AND (oia.access_type='{$accessTypeMembership}')) ".
				"LEFT JOIN {$orderItemsTable} oi ON (oia.order_item_id=oi.id) ".
				"LEFT JOIN {$ordersTable} o ON (oi.order_id = o.id) ".
				"WHERE (oi.status='{$statusRecurring}' OR oi.status='{$statusRebillFailed}' OR oi.status='{$statusRecurringPendingOverdue}') AND (oi.is_gift = 0)";
		$masterQuery = $wpdb->prepare($masterQuery,$userId);
		
		$optimizedQuery = "SELECT SQL_CALC_FOUND_ROWS * FROM ({$masterQuery}) data, ".
						  "(SELECT FOUND_ROWS() as 'total') tot";
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) //handle the sorting
		{
			$optimizedQuery.= " ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		$optimizedQuery.=" ".$dg->getLimitSql(); //for pagination
		$membershipLevelResults = $wpdb->get_results($optimizedQuery);
		
		// bundle subscriptions
		$masterQuery =  "SELECT o.date_added, b.name as access_type_name, b.id as access_type_id, oi.item_id as product_id, oi.status as order_item_status, oi.id as order_item_id FROM {$orderItemAccessTable} oia ".
				"INNER JOIN {$bundlesTable} b ON ((oia.user_id='%s') AND (oia.access_type_id = b.id) AND (oia.access_type='{$accessTypeBundle}')) ".
				"LEFT JOIN {$orderItemsTable} oi ON (oia.order_item_id=oi.id) ".
				"LEFT JOIN {$ordersTable} o ON (oi.order_id = o.id) ".
				"WHERE (oi.status='{$statusRecurring}' OR oi.status='{$statusRebillFailed}' OR oi.status='{$statusRecurringPendingOverdue}') AND (oi.is_gift = 0)";
		$masterQuery = $wpdb->prepare($masterQuery,$userId);
		
		$optimizedQuery = "SELECT SQL_CALC_FOUND_ROWS * FROM ({$masterQuery}) data, ".
				"(SELECT FOUND_ROWS() as 'total') tot";
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) //handle the sorting
		{
			$optimizedQuery.= " ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		$optimizedQuery.=" ".$dg->getLimitSql(); //for pagination
		$bundleResults = $wpdb->get_results($optimizedQuery);
		
		// gifted subscriptions
		$masterQuery = "SELECT oi.item_id as product_id, oi.status as order_item_status, oi.id as order_item_id, o.date_added FROM {$orderItemsTable} oi ".
				"LEFT JOIN {$ordersTable} o on (oi.order_id = o.id) ".
				"LEFT JOIN {$wpdb->users} u ON (o.user_id = u.ID) ".
				"WHERE (o.user_id = '%s') AND (oi.status = {$statusRecurring} OR oi.status= {$statusRebillFailed} OR oi.status='{$statusRecurringPendingOverdue}') AND (oi.is_gift = 1)";
		$masterQuery = $wpdb->prepare($masterQuery,$userId);
		
		$optimizedQuery = "SELECT SQL_CALC_FOUND_ROWS * FROM ({$masterQuery}) data, ".
				"(SELECT FOUND_ROWS() as 'total') tot";
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) //handle the sorting
		{
			$optimizedQuery.= " ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		$optimizedQuery.=" ".$dg->getLimitSql(); //for pagination
		$giftResults = $wpdb->get_results($optimizedQuery);
		
		// combine subscription results if necessary
		$combinedResults = array();
		$combinedTotal = 0;
		
		if(count($membershipLevelResults) > 0)
		{
			$combinedTotal += intval($membershipLevelResults[0]->total);
		}
		
		if(count($bundleResults) > 0)
		{
			$combinedTotal += intval($bundleResults[0]->total);
		}
		
		if(count($giftResults) > 0)
		{
			$combinedTotal += intval($giftResults[0]->total);
		}
		
		// process membership level results
		if(count($membershipLevelResults) > 0)
		{
			foreach ($membershipLevelResults as $rowObject)
			{
				if(!is_null($rowObject->product_id))
				{
					$rowObject->total = $combinedTotal;
					$rowObject->access_type = MM_OrderItemAccess::$ACCESS_TYPE_MEMBERSHIP;
					
					$product = new MM_Product($rowObject->product_id);
					$productName = MM_NO_DATA;
					
					if($product->isValid())
					{
						$productName = $product->getName();
					}
					
					$orderItem = new MM_OrderItem($rowObject->order_item_id);
					$billingDescription = MM_NO_DATA;
					
					if($orderItem->isValid())
					{
						$billingDescription = $orderItem->getBillingDescription(false);
					}
					
					$rowObject->product_name = $productName;
					$rowObject->billing_description = $billingDescription;
					
					$combinedResults[] = $rowObject;
				}
			}
		}
		
		// process bundle results
		if(count($bundleResults) > 0)
		{
			foreach ($bundleResults as $rowObject)
			{
				if(!is_null($rowObject->product_id))
				{
					$rowObject->total = $combinedTotal;
					$rowObject->access_type = MM_OrderItemAccess::$ACCESS_TYPE_BUNDLE;
						
					$product = new MM_Product($rowObject->product_id);
					$productName = MM_NO_DATA;
						
					if($product->isValid())
					{
						$productName = $product->getName();
					}
					
					$orderItem = new MM_OrderItem($rowObject->order_item_id);
					$billingDescription = MM_NO_DATA;
					
					if($orderItem->isValid())
					{
						$billingDescription = $orderItem->getBillingDescription(false);
					}

					$rowObject->product_name = $productName;
					$rowObject->billing_description = $billingDescription;
						
					$combinedResults[] = $rowObject;
				}
			}
		}
		
		// process gift results
		if(count($giftResults) > 0)
		{
			foreach ($giftResults as $rowObject)
			{
				if(!is_null($rowObject->product_id))
				{
					$rowObject->total = $combinedTotal;
					$rowObject->access_type = "gift";
						
					$product = new MM_Product($rowObject->product_id);
					$productName = MM_NO_DATA;
						
					if($product->isValid())
					{
						$productName = $product->getName();
					}
					
					$orderItem = new MM_OrderItem($rowObject->order_item_id);
					$billingDescription = MM_NO_DATA;
					
					if($orderItem->isValid())
					{
						$billingDescription = $orderItem->getBillingDescription(false);
					}

					$rowObject->product_name = $productName;
					$rowObject->billing_description = $billingDescription;
						
					$combinedResults[] = $rowObject;
				}
			}
		}
		
		return $combinedResults;
	}
	
	public function generateRows($data, $renderForAdmin=true)
	{
		global $current_user;
		$rows = array();
		
		foreach($data as $item)
		{
			if($renderForAdmin)
			{
				$dateFormat = "M j, Y";
				$isCardOnFile = false;
				$pymtService = null;
				
				$orderItem = new MM_OrderItem($item->order_item_id);
				
				// next rebill date
				$nextRebillDate = MM_NO_DATA;
				if($orderItem->isValid())
				{
					global $wpdb;
					
					$sql = $wpdb->prepare("SELECT payment_id FROM ".MM_TABLE_ORDERS." WHERE id = %s LIMIT 1",$orderItem->getOrderId());
					$pymtServiceId = $wpdb->get_var($sql);
					
					if ($pymtServiceId !== false)
					{
						$pymtService = MM_PaymentServiceFactory::getPaymentServiceById($pymtServiceId);
							
						if($pymtService->supportsFeature(MM_PaymentServiceFeatures::CARD_ON_FILE))
						{
							$isCardOnFile = true;
							$scheduledPaymentEvent = MM_ScheduledPaymentEvent::findNextScheduledEventByOrderItemId($orderItem->getId());
							if ($scheduledPaymentEvent->isValid())
							{
								$nextRebillDate = date($dateFormat, strtotime($scheduledPaymentEvent->getScheduledDate()));
							}
						}
					}
				}
				
				// Associated Access
				$associatedAccess = MM_NO_DATA;
				if (!empty($item->access_type_name) && !empty($item->access_type))
				{
					$associatedAccess = MM_Utils::getAccessIcon($item->access_type)." ".MM_Utils::abbrevString($item->access_type_name);
				}
				else if(!empty($item->access_type) && $item->access_type == "gift")
				{
					$associatedAccess = MM_Utils::getIcon('gift', 'purple', '1.3em', '1px')." <em>This subscription is a gift</em>";
				}
				
				// Status
				$status = MM_NO_DATA;
				if (!empty($item->order_item_status))
				{
					if($item->order_item_status == MM_OrderItem::$STATUS_RECURRING)
					{
						$status = MM_Status::getImage(MM_Status::$ACTIVE);
					}
					elseif ($item->order_item_status == MM_OrderItem::$STATUS_RECURRING_REBILL_FAILED)
					{
						$status = MM_Status::getImage(MM_Status::$OVERDUE);
					}elseif ($item->order_item_status == MM_OrderItem::$STATUS_RECURRING_PENDING_OVERDUE)
					{
						$pendingOverdueDesc = "This subscription is in pending overdue status. This usually happens when the credit card used by the customer ";
						$pendingOverdueDesc .= "will be expired by the time the first rebill was scheduled to happen. When the scheduled rebill date arrives their ";
						$pendingOverdueDesc .= "access will automatically be marked as overdue. In order to keep their access, they'll have to repurchase ";
						$pendingOverdueDesc .= "this subscription using a valid credit card.";
						$status = MM_Utils::getIcon('clock-o', 'orange', '1.3em', '1px', $pendingOverdueDesc);
					}
				}
				
				$actions = "";
				
				$actions .= "<a href=\"javascript:mmjs.cancelSubscriptionAndAccess({$item->order_item_id});\" title='Cancel billing and associated access' style='margin-right:4px;'>";
				$actions .= MM_Utils::getIcon('stop', 'red', '1.2em', '2px');
				$actions .= "</a>";
				
				$actions .= " <a href=\"javascript:mmjs.cancelSubscriptionOnly({$item->order_item_id});\" title='Cancel billing only' style='margin-right:6px;'>";
				$actions .= MM_Utils::getIcon('credit-card', 'red', '1.2em', '2px');
				$actions .= "</a>";
				
				// add advanced subscription tools if current subscription is associated with a card-on-file payment service
				// and the customer has access to advanced subscription mgmt features
				if($isCardOnFile && (MM_MemberMouseService::hasPermission(MM_MemberMouseService::$FEATURE_ADV_SUBSCRIPTION_MGMT) == MM_MemberMouseService::$ACTIVE))
				{
					$editActionUrl = "href='javascript:mmjs.editSubscription({$item->order_item_id});'";
					$actions .= MM_Utils::getEditIcon("Edit Subscription", '', $editActionUrl);
				}
				else if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$FEATURE_ADV_SUBSCRIPTION_MGMT) != MM_MemberMouseService::$ACTIVE)
				{
					$actions .= MM_Utils::getEditIcon('Additional subscription management features are only available on the Advanced plan and above. Visit membermouse.com to upgrade your plan.', '', '', true);
				}
				else if(!$isCardOnFile && !is_null($pymtService))
				{
					$actions .= MM_Utils::getEditIcon("This subscription is being managed by {$pymtService->getName()}. Additional subscription management features are only available for subscriptions being managed by payment services with card-on-file support (i.e. Stripe, Braintree, Authorize.net CIM).", '', '', true);
				}
				
				$crntRow = array
				(
					array( 'content' => date($dateFormat, strtotime($item->date_added))),
					array( 'content' => $status),
					array( 'content' => $associatedAccess),
					array( 'content' => MM_Utils::abbrevString($item->product_name)),
					array( 'content' => $item->billing_description),
					array( 'content' => $nextRebillDate),
					array( 'content' => $actions, "attr" => "nowrap")
				);
			}
			else 
			{
				$dateFormat = "M j, Y";
				
				$productName = "";
				if(!empty($item->access_type) && $item->access_type == "gift")
				{
					$productName .= MM_Utils::getIcon('gift', 'purple', '1.3em', '1px', 'This subscription is a gift', 'margin-right:4px;');
				}
				$productName .= $item->product_name;	
							
				// Determine if update billing details link should be added based on the payment method used to purchase the
				// subscription. Only onsite methods should allow this.
				$paymentMethod = null;
				$orderItem = new MM_OrderItem($item->order_item_id);
				$actions = "";
				
				if($orderItem->isValid())
				{
					$order = new MM_Order($orderItem->getOrderId());
					
					if($order->isValid())
					{
						$paymentMethod = $order->getPaymentMethod();
					}

					if(!is_null($paymentMethod) && $paymentMethod->supportsFeature(MM_PaymentServiceFeatures::ONSITE_SERVICE)
						&& $orderItem->getStatus() != MM_OrderItem::$STATUS_RECURRING_PENDING_OVERDUE)
					{
						$actions .= "<a href=\"javascript:myaccount_js.updateSubscriptionInfo({$current_user->ID}, {$orderItem->getId()});\" class=\"mm-update-subscription-button\">update billing details</a> | ";
					}
				}
				
				if(!empty($item->access_type) && $item->access_type == MM_OrderItemAccess::$ACCESS_TYPE_MEMBERSHIP)
				{	
					$actions .= "<a href=\"".MM_CorePageEngine::getUrl(MM_CorePageType::$SAVETHESALE)."\" class=\"mm-cancel-subscription-button\">cancel</a>";
				}
				else if(!empty($item->access_type) && ($item->access_type == MM_OrderItemAccess::$ACCESS_TYPE_BUNDLE || $item->access_type == "gift"))
				{
					$actions .= "<a href=\"javascript:myaccount_js.cancelSubscription({$item->order_item_id});\" class=\"mm-cancel-subscription-button\">cancel</a>";
				}
				
				$status = "";
				if($item->order_item_status == MM_OrderItem::$STATUS_RECURRING_REBILL_FAILED)
				{
					$status = MM_Utils::getIcon('warning', 'yellow', '1.3em', '2px', 'This subscription is overdue');
				}
				
				$crntRow = array
				(
					array( 'content' => MM_Utils::dateToLocal($item->date_added, $dateFormat)),
					array( 'content' => $productName),
					array( 'content' => $item->billing_description),
					array( 'content' => $actions),
					array( 'content' => $status)
				);
			}
			
			$rows[] = $crntRow;
		}
		
		return $rows;
	}
}
